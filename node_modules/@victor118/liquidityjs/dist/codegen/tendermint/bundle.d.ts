import * as _100 from "./abci/types";
import * as _101 from "./crypto/keys";
import * as _102 from "./crypto/proof";
import * as _103 from "./libs/bits/types";
import * as _104 from "./p2p/types";
import * as _105 from "./types/block";
import * as _106 from "./types/evidence";
import * as _107 from "./types/params";
import * as _108 from "./types/types";
import * as _109 from "./types/validator";
import * as _110 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _100.CheckTxType;
        checkTxTypeToJSON(object: _100.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _100.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _100.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _100.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _100.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _100.EvidenceType;
        evidenceTypeToJSON(object: _100.EvidenceType): string;
        CheckTxType: typeof _100.CheckTxType;
        CheckTxTypeSDKType: typeof _100.CheckTxType;
        CheckTxTypeAmino: typeof _100.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _100.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _100.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _100.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _100.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _100.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _100.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _100.EvidenceType;
        EvidenceTypeSDKType: typeof _100.EvidenceType;
        EvidenceTypeAmino: typeof _100.EvidenceType;
        Request: {
            typeUrl: string;
            is(o: any): o is _100.Request;
            isSDK(o: any): o is _100.RequestSDKType;
            isAmino(o: any): o is _100.RequestAmino;
            encode(message: _100.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.Request;
            fromPartial(object: Partial<_100.Request>): _100.Request;
            fromAmino(object: _100.RequestAmino): _100.Request;
            toAmino(message: _100.Request): _100.RequestAmino;
            fromAminoMsg(object: _100.RequestAminoMsg): _100.Request;
            fromProtoMsg(message: _100.RequestProtoMsg): _100.Request;
            toProto(message: _100.Request): Uint8Array;
            toProtoMsg(message: _100.Request): _100.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            is(o: any): o is _100.RequestEcho;
            isSDK(o: any): o is _100.RequestEchoSDKType;
            isAmino(o: any): o is _100.RequestEchoAmino;
            encode(message: _100.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestEcho;
            fromPartial(object: Partial<_100.RequestEcho>): _100.RequestEcho;
            fromAmino(object: _100.RequestEchoAmino): _100.RequestEcho;
            toAmino(message: _100.RequestEcho): _100.RequestEchoAmino;
            fromAminoMsg(object: _100.RequestEchoAminoMsg): _100.RequestEcho;
            fromProtoMsg(message: _100.RequestEchoProtoMsg): _100.RequestEcho;
            toProto(message: _100.RequestEcho): Uint8Array;
            toProtoMsg(message: _100.RequestEcho): _100.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            is(o: any): o is _100.RequestFlush;
            isSDK(o: any): o is _100.RequestFlushSDKType;
            isAmino(o: any): o is _100.RequestFlushAmino;
            encode(_: _100.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestFlush;
            fromPartial(_: Partial<_100.RequestFlush>): _100.RequestFlush;
            fromAmino(_: _100.RequestFlushAmino): _100.RequestFlush;
            toAmino(_: _100.RequestFlush): _100.RequestFlushAmino;
            fromAminoMsg(object: _100.RequestFlushAminoMsg): _100.RequestFlush;
            fromProtoMsg(message: _100.RequestFlushProtoMsg): _100.RequestFlush;
            toProto(message: _100.RequestFlush): Uint8Array;
            toProtoMsg(message: _100.RequestFlush): _100.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            is(o: any): o is _100.RequestInfo;
            isSDK(o: any): o is _100.RequestInfoSDKType;
            isAmino(o: any): o is _100.RequestInfoAmino;
            encode(message: _100.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestInfo;
            fromPartial(object: Partial<_100.RequestInfo>): _100.RequestInfo;
            fromAmino(object: _100.RequestInfoAmino): _100.RequestInfo;
            toAmino(message: _100.RequestInfo): _100.RequestInfoAmino;
            fromAminoMsg(object: _100.RequestInfoAminoMsg): _100.RequestInfo;
            fromProtoMsg(message: _100.RequestInfoProtoMsg): _100.RequestInfo;
            toProto(message: _100.RequestInfo): Uint8Array;
            toProtoMsg(message: _100.RequestInfo): _100.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            is(o: any): o is _100.RequestSetOption;
            isSDK(o: any): o is _100.RequestSetOptionSDKType;
            isAmino(o: any): o is _100.RequestSetOptionAmino;
            encode(message: _100.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestSetOption;
            fromPartial(object: Partial<_100.RequestSetOption>): _100.RequestSetOption;
            fromAmino(object: _100.RequestSetOptionAmino): _100.RequestSetOption;
            toAmino(message: _100.RequestSetOption): _100.RequestSetOptionAmino;
            fromAminoMsg(object: _100.RequestSetOptionAminoMsg): _100.RequestSetOption;
            fromProtoMsg(message: _100.RequestSetOptionProtoMsg): _100.RequestSetOption;
            toProto(message: _100.RequestSetOption): Uint8Array;
            toProtoMsg(message: _100.RequestSetOption): _100.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            is(o: any): o is _100.RequestInitChain;
            isSDK(o: any): o is _100.RequestInitChainSDKType;
            isAmino(o: any): o is _100.RequestInitChainAmino;
            encode(message: _100.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestInitChain;
            fromPartial(object: Partial<_100.RequestInitChain>): _100.RequestInitChain;
            fromAmino(object: _100.RequestInitChainAmino): _100.RequestInitChain;
            toAmino(message: _100.RequestInitChain): _100.RequestInitChainAmino;
            fromAminoMsg(object: _100.RequestInitChainAminoMsg): _100.RequestInitChain;
            fromProtoMsg(message: _100.RequestInitChainProtoMsg): _100.RequestInitChain;
            toProto(message: _100.RequestInitChain): Uint8Array;
            toProtoMsg(message: _100.RequestInitChain): _100.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            is(o: any): o is _100.RequestQuery;
            isSDK(o: any): o is _100.RequestQuerySDKType;
            isAmino(o: any): o is _100.RequestQueryAmino;
            encode(message: _100.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestQuery;
            fromPartial(object: Partial<_100.RequestQuery>): _100.RequestQuery;
            fromAmino(object: _100.RequestQueryAmino): _100.RequestQuery;
            toAmino(message: _100.RequestQuery): _100.RequestQueryAmino;
            fromAminoMsg(object: _100.RequestQueryAminoMsg): _100.RequestQuery;
            fromProtoMsg(message: _100.RequestQueryProtoMsg): _100.RequestQuery;
            toProto(message: _100.RequestQuery): Uint8Array;
            toProtoMsg(message: _100.RequestQuery): _100.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            is(o: any): o is _100.RequestBeginBlock;
            isSDK(o: any): o is _100.RequestBeginBlockSDKType;
            isAmino(o: any): o is _100.RequestBeginBlockAmino;
            encode(message: _100.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestBeginBlock;
            fromPartial(object: Partial<_100.RequestBeginBlock>): _100.RequestBeginBlock;
            fromAmino(object: _100.RequestBeginBlockAmino): _100.RequestBeginBlock;
            toAmino(message: _100.RequestBeginBlock): _100.RequestBeginBlockAmino;
            fromAminoMsg(object: _100.RequestBeginBlockAminoMsg): _100.RequestBeginBlock;
            fromProtoMsg(message: _100.RequestBeginBlockProtoMsg): _100.RequestBeginBlock;
            toProto(message: _100.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _100.RequestBeginBlock): _100.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            is(o: any): o is _100.RequestCheckTx;
            isSDK(o: any): o is _100.RequestCheckTxSDKType;
            isAmino(o: any): o is _100.RequestCheckTxAmino;
            encode(message: _100.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestCheckTx;
            fromPartial(object: Partial<_100.RequestCheckTx>): _100.RequestCheckTx;
            fromAmino(object: _100.RequestCheckTxAmino): _100.RequestCheckTx;
            toAmino(message: _100.RequestCheckTx): _100.RequestCheckTxAmino;
            fromAminoMsg(object: _100.RequestCheckTxAminoMsg): _100.RequestCheckTx;
            fromProtoMsg(message: _100.RequestCheckTxProtoMsg): _100.RequestCheckTx;
            toProto(message: _100.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _100.RequestCheckTx): _100.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            is(o: any): o is _100.RequestDeliverTx;
            isSDK(o: any): o is _100.RequestDeliverTxSDKType;
            isAmino(o: any): o is _100.RequestDeliverTxAmino;
            encode(message: _100.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestDeliverTx;
            fromPartial(object: Partial<_100.RequestDeliverTx>): _100.RequestDeliverTx;
            fromAmino(object: _100.RequestDeliverTxAmino): _100.RequestDeliverTx;
            toAmino(message: _100.RequestDeliverTx): _100.RequestDeliverTxAmino;
            fromAminoMsg(object: _100.RequestDeliverTxAminoMsg): _100.RequestDeliverTx;
            fromProtoMsg(message: _100.RequestDeliverTxProtoMsg): _100.RequestDeliverTx;
            toProto(message: _100.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _100.RequestDeliverTx): _100.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            is(o: any): o is _100.RequestEndBlock;
            isSDK(o: any): o is _100.RequestEndBlockSDKType;
            isAmino(o: any): o is _100.RequestEndBlockAmino;
            encode(message: _100.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestEndBlock;
            fromPartial(object: Partial<_100.RequestEndBlock>): _100.RequestEndBlock;
            fromAmino(object: _100.RequestEndBlockAmino): _100.RequestEndBlock;
            toAmino(message: _100.RequestEndBlock): _100.RequestEndBlockAmino;
            fromAminoMsg(object: _100.RequestEndBlockAminoMsg): _100.RequestEndBlock;
            fromProtoMsg(message: _100.RequestEndBlockProtoMsg): _100.RequestEndBlock;
            toProto(message: _100.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _100.RequestEndBlock): _100.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            is(o: any): o is _100.RequestCommit;
            isSDK(o: any): o is _100.RequestCommitSDKType;
            isAmino(o: any): o is _100.RequestCommitAmino;
            encode(_: _100.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestCommit;
            fromPartial(_: Partial<_100.RequestCommit>): _100.RequestCommit;
            fromAmino(_: _100.RequestCommitAmino): _100.RequestCommit;
            toAmino(_: _100.RequestCommit): _100.RequestCommitAmino;
            fromAminoMsg(object: _100.RequestCommitAminoMsg): _100.RequestCommit;
            fromProtoMsg(message: _100.RequestCommitProtoMsg): _100.RequestCommit;
            toProto(message: _100.RequestCommit): Uint8Array;
            toProtoMsg(message: _100.RequestCommit): _100.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            is(o: any): o is _100.RequestListSnapshots;
            isSDK(o: any): o is _100.RequestListSnapshotsSDKType;
            isAmino(o: any): o is _100.RequestListSnapshotsAmino;
            encode(_: _100.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestListSnapshots;
            fromPartial(_: Partial<_100.RequestListSnapshots>): _100.RequestListSnapshots;
            fromAmino(_: _100.RequestListSnapshotsAmino): _100.RequestListSnapshots;
            toAmino(_: _100.RequestListSnapshots): _100.RequestListSnapshotsAmino;
            fromAminoMsg(object: _100.RequestListSnapshotsAminoMsg): _100.RequestListSnapshots;
            fromProtoMsg(message: _100.RequestListSnapshotsProtoMsg): _100.RequestListSnapshots;
            toProto(message: _100.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _100.RequestListSnapshots): _100.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _100.RequestOfferSnapshot;
            isSDK(o: any): o is _100.RequestOfferSnapshotSDKType;
            isAmino(o: any): o is _100.RequestOfferSnapshotAmino;
            encode(message: _100.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestOfferSnapshot;
            fromPartial(object: Partial<_100.RequestOfferSnapshot>): _100.RequestOfferSnapshot;
            fromAmino(object: _100.RequestOfferSnapshotAmino): _100.RequestOfferSnapshot;
            toAmino(message: _100.RequestOfferSnapshot): _100.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _100.RequestOfferSnapshotAminoMsg): _100.RequestOfferSnapshot;
            fromProtoMsg(message: _100.RequestOfferSnapshotProtoMsg): _100.RequestOfferSnapshot;
            toProto(message: _100.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _100.RequestOfferSnapshot): _100.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _100.RequestLoadSnapshotChunk;
            isSDK(o: any): o is _100.RequestLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _100.RequestLoadSnapshotChunkAmino;
            encode(message: _100.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_100.RequestLoadSnapshotChunk>): _100.RequestLoadSnapshotChunk;
            fromAmino(object: _100.RequestLoadSnapshotChunkAmino): _100.RequestLoadSnapshotChunk;
            toAmino(message: _100.RequestLoadSnapshotChunk): _100.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _100.RequestLoadSnapshotChunkAminoMsg): _100.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _100.RequestLoadSnapshotChunkProtoMsg): _100.RequestLoadSnapshotChunk;
            toProto(message: _100.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _100.RequestLoadSnapshotChunk): _100.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _100.RequestApplySnapshotChunk;
            isSDK(o: any): o is _100.RequestApplySnapshotChunkSDKType;
            isAmino(o: any): o is _100.RequestApplySnapshotChunkAmino;
            encode(message: _100.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_100.RequestApplySnapshotChunk>): _100.RequestApplySnapshotChunk;
            fromAmino(object: _100.RequestApplySnapshotChunkAmino): _100.RequestApplySnapshotChunk;
            toAmino(message: _100.RequestApplySnapshotChunk): _100.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _100.RequestApplySnapshotChunkAminoMsg): _100.RequestApplySnapshotChunk;
            fromProtoMsg(message: _100.RequestApplySnapshotChunkProtoMsg): _100.RequestApplySnapshotChunk;
            toProto(message: _100.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _100.RequestApplySnapshotChunk): _100.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            is(o: any): o is _100.Response;
            isSDK(o: any): o is _100.ResponseSDKType;
            isAmino(o: any): o is _100.ResponseAmino;
            encode(message: _100.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.Response;
            fromPartial(object: Partial<_100.Response>): _100.Response;
            fromAmino(object: _100.ResponseAmino): _100.Response;
            toAmino(message: _100.Response): _100.ResponseAmino;
            fromAminoMsg(object: _100.ResponseAminoMsg): _100.Response;
            fromProtoMsg(message: _100.ResponseProtoMsg): _100.Response;
            toProto(message: _100.Response): Uint8Array;
            toProtoMsg(message: _100.Response): _100.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            is(o: any): o is _100.ResponseException;
            isSDK(o: any): o is _100.ResponseExceptionSDKType;
            isAmino(o: any): o is _100.ResponseExceptionAmino;
            encode(message: _100.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseException;
            fromPartial(object: Partial<_100.ResponseException>): _100.ResponseException;
            fromAmino(object: _100.ResponseExceptionAmino): _100.ResponseException;
            toAmino(message: _100.ResponseException): _100.ResponseExceptionAmino;
            fromAminoMsg(object: _100.ResponseExceptionAminoMsg): _100.ResponseException;
            fromProtoMsg(message: _100.ResponseExceptionProtoMsg): _100.ResponseException;
            toProto(message: _100.ResponseException): Uint8Array;
            toProtoMsg(message: _100.ResponseException): _100.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            is(o: any): o is _100.ResponseEcho;
            isSDK(o: any): o is _100.ResponseEchoSDKType;
            isAmino(o: any): o is _100.ResponseEchoAmino;
            encode(message: _100.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseEcho;
            fromPartial(object: Partial<_100.ResponseEcho>): _100.ResponseEcho;
            fromAmino(object: _100.ResponseEchoAmino): _100.ResponseEcho;
            toAmino(message: _100.ResponseEcho): _100.ResponseEchoAmino;
            fromAminoMsg(object: _100.ResponseEchoAminoMsg): _100.ResponseEcho;
            fromProtoMsg(message: _100.ResponseEchoProtoMsg): _100.ResponseEcho;
            toProto(message: _100.ResponseEcho): Uint8Array;
            toProtoMsg(message: _100.ResponseEcho): _100.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            is(o: any): o is _100.ResponseFlush;
            isSDK(o: any): o is _100.ResponseFlushSDKType;
            isAmino(o: any): o is _100.ResponseFlushAmino;
            encode(_: _100.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseFlush;
            fromPartial(_: Partial<_100.ResponseFlush>): _100.ResponseFlush;
            fromAmino(_: _100.ResponseFlushAmino): _100.ResponseFlush;
            toAmino(_: _100.ResponseFlush): _100.ResponseFlushAmino;
            fromAminoMsg(object: _100.ResponseFlushAminoMsg): _100.ResponseFlush;
            fromProtoMsg(message: _100.ResponseFlushProtoMsg): _100.ResponseFlush;
            toProto(message: _100.ResponseFlush): Uint8Array;
            toProtoMsg(message: _100.ResponseFlush): _100.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            is(o: any): o is _100.ResponseInfo;
            isSDK(o: any): o is _100.ResponseInfoSDKType;
            isAmino(o: any): o is _100.ResponseInfoAmino;
            encode(message: _100.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseInfo;
            fromPartial(object: Partial<_100.ResponseInfo>): _100.ResponseInfo;
            fromAmino(object: _100.ResponseInfoAmino): _100.ResponseInfo;
            toAmino(message: _100.ResponseInfo): _100.ResponseInfoAmino;
            fromAminoMsg(object: _100.ResponseInfoAminoMsg): _100.ResponseInfo;
            fromProtoMsg(message: _100.ResponseInfoProtoMsg): _100.ResponseInfo;
            toProto(message: _100.ResponseInfo): Uint8Array;
            toProtoMsg(message: _100.ResponseInfo): _100.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            is(o: any): o is _100.ResponseSetOption;
            isSDK(o: any): o is _100.ResponseSetOptionSDKType;
            isAmino(o: any): o is _100.ResponseSetOptionAmino;
            encode(message: _100.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseSetOption;
            fromPartial(object: Partial<_100.ResponseSetOption>): _100.ResponseSetOption;
            fromAmino(object: _100.ResponseSetOptionAmino): _100.ResponseSetOption;
            toAmino(message: _100.ResponseSetOption): _100.ResponseSetOptionAmino;
            fromAminoMsg(object: _100.ResponseSetOptionAminoMsg): _100.ResponseSetOption;
            fromProtoMsg(message: _100.ResponseSetOptionProtoMsg): _100.ResponseSetOption;
            toProto(message: _100.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _100.ResponseSetOption): _100.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            is(o: any): o is _100.ResponseInitChain;
            isSDK(o: any): o is _100.ResponseInitChainSDKType;
            isAmino(o: any): o is _100.ResponseInitChainAmino;
            encode(message: _100.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseInitChain;
            fromPartial(object: Partial<_100.ResponseInitChain>): _100.ResponseInitChain;
            fromAmino(object: _100.ResponseInitChainAmino): _100.ResponseInitChain;
            toAmino(message: _100.ResponseInitChain): _100.ResponseInitChainAmino;
            fromAminoMsg(object: _100.ResponseInitChainAminoMsg): _100.ResponseInitChain;
            fromProtoMsg(message: _100.ResponseInitChainProtoMsg): _100.ResponseInitChain;
            toProto(message: _100.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _100.ResponseInitChain): _100.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            is(o: any): o is _100.ResponseQuery;
            isSDK(o: any): o is _100.ResponseQuerySDKType;
            isAmino(o: any): o is _100.ResponseQueryAmino;
            encode(message: _100.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseQuery;
            fromPartial(object: Partial<_100.ResponseQuery>): _100.ResponseQuery;
            fromAmino(object: _100.ResponseQueryAmino): _100.ResponseQuery;
            toAmino(message: _100.ResponseQuery): _100.ResponseQueryAmino;
            fromAminoMsg(object: _100.ResponseQueryAminoMsg): _100.ResponseQuery;
            fromProtoMsg(message: _100.ResponseQueryProtoMsg): _100.ResponseQuery;
            toProto(message: _100.ResponseQuery): Uint8Array;
            toProtoMsg(message: _100.ResponseQuery): _100.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            is(o: any): o is _100.ResponseBeginBlock;
            isSDK(o: any): o is _100.ResponseBeginBlockSDKType;
            isAmino(o: any): o is _100.ResponseBeginBlockAmino;
            encode(message: _100.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseBeginBlock;
            fromPartial(object: Partial<_100.ResponseBeginBlock>): _100.ResponseBeginBlock;
            fromAmino(object: _100.ResponseBeginBlockAmino): _100.ResponseBeginBlock;
            toAmino(message: _100.ResponseBeginBlock): _100.ResponseBeginBlockAmino;
            fromAminoMsg(object: _100.ResponseBeginBlockAminoMsg): _100.ResponseBeginBlock;
            fromProtoMsg(message: _100.ResponseBeginBlockProtoMsg): _100.ResponseBeginBlock;
            toProto(message: _100.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _100.ResponseBeginBlock): _100.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            is(o: any): o is _100.ResponseCheckTx;
            isSDK(o: any): o is _100.ResponseCheckTxSDKType;
            isAmino(o: any): o is _100.ResponseCheckTxAmino;
            encode(message: _100.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseCheckTx;
            fromPartial(object: Partial<_100.ResponseCheckTx>): _100.ResponseCheckTx;
            fromAmino(object: _100.ResponseCheckTxAmino): _100.ResponseCheckTx;
            toAmino(message: _100.ResponseCheckTx): _100.ResponseCheckTxAmino;
            fromAminoMsg(object: _100.ResponseCheckTxAminoMsg): _100.ResponseCheckTx;
            fromProtoMsg(message: _100.ResponseCheckTxProtoMsg): _100.ResponseCheckTx;
            toProto(message: _100.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _100.ResponseCheckTx): _100.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            is(o: any): o is _100.ResponseDeliverTx;
            isSDK(o: any): o is _100.ResponseDeliverTxSDKType;
            isAmino(o: any): o is _100.ResponseDeliverTxAmino;
            encode(message: _100.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseDeliverTx;
            fromPartial(object: Partial<_100.ResponseDeliverTx>): _100.ResponseDeliverTx;
            fromAmino(object: _100.ResponseDeliverTxAmino): _100.ResponseDeliverTx;
            toAmino(message: _100.ResponseDeliverTx): _100.ResponseDeliverTxAmino;
            fromAminoMsg(object: _100.ResponseDeliverTxAminoMsg): _100.ResponseDeliverTx;
            fromProtoMsg(message: _100.ResponseDeliverTxProtoMsg): _100.ResponseDeliverTx;
            toProto(message: _100.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _100.ResponseDeliverTx): _100.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            is(o: any): o is _100.ResponseEndBlock;
            isSDK(o: any): o is _100.ResponseEndBlockSDKType;
            isAmino(o: any): o is _100.ResponseEndBlockAmino;
            encode(message: _100.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseEndBlock;
            fromPartial(object: Partial<_100.ResponseEndBlock>): _100.ResponseEndBlock;
            fromAmino(object: _100.ResponseEndBlockAmino): _100.ResponseEndBlock;
            toAmino(message: _100.ResponseEndBlock): _100.ResponseEndBlockAmino;
            fromAminoMsg(object: _100.ResponseEndBlockAminoMsg): _100.ResponseEndBlock;
            fromProtoMsg(message: _100.ResponseEndBlockProtoMsg): _100.ResponseEndBlock;
            toProto(message: _100.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _100.ResponseEndBlock): _100.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            is(o: any): o is _100.ResponseCommit;
            isSDK(o: any): o is _100.ResponseCommitSDKType;
            isAmino(o: any): o is _100.ResponseCommitAmino;
            encode(message: _100.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseCommit;
            fromPartial(object: Partial<_100.ResponseCommit>): _100.ResponseCommit;
            fromAmino(object: _100.ResponseCommitAmino): _100.ResponseCommit;
            toAmino(message: _100.ResponseCommit): _100.ResponseCommitAmino;
            fromAminoMsg(object: _100.ResponseCommitAminoMsg): _100.ResponseCommit;
            fromProtoMsg(message: _100.ResponseCommitProtoMsg): _100.ResponseCommit;
            toProto(message: _100.ResponseCommit): Uint8Array;
            toProtoMsg(message: _100.ResponseCommit): _100.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            is(o: any): o is _100.ResponseListSnapshots;
            isSDK(o: any): o is _100.ResponseListSnapshotsSDKType;
            isAmino(o: any): o is _100.ResponseListSnapshotsAmino;
            encode(message: _100.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseListSnapshots;
            fromPartial(object: Partial<_100.ResponseListSnapshots>): _100.ResponseListSnapshots;
            fromAmino(object: _100.ResponseListSnapshotsAmino): _100.ResponseListSnapshots;
            toAmino(message: _100.ResponseListSnapshots): _100.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _100.ResponseListSnapshotsAminoMsg): _100.ResponseListSnapshots;
            fromProtoMsg(message: _100.ResponseListSnapshotsProtoMsg): _100.ResponseListSnapshots;
            toProto(message: _100.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _100.ResponseListSnapshots): _100.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _100.ResponseOfferSnapshot;
            isSDK(o: any): o is _100.ResponseOfferSnapshotSDKType;
            isAmino(o: any): o is _100.ResponseOfferSnapshotAmino;
            encode(message: _100.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseOfferSnapshot;
            fromPartial(object: Partial<_100.ResponseOfferSnapshot>): _100.ResponseOfferSnapshot;
            fromAmino(object: _100.ResponseOfferSnapshotAmino): _100.ResponseOfferSnapshot;
            toAmino(message: _100.ResponseOfferSnapshot): _100.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _100.ResponseOfferSnapshotAminoMsg): _100.ResponseOfferSnapshot;
            fromProtoMsg(message: _100.ResponseOfferSnapshotProtoMsg): _100.ResponseOfferSnapshot;
            toProto(message: _100.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _100.ResponseOfferSnapshot): _100.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _100.ResponseLoadSnapshotChunk;
            isSDK(o: any): o is _100.ResponseLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _100.ResponseLoadSnapshotChunkAmino;
            encode(message: _100.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_100.ResponseLoadSnapshotChunk>): _100.ResponseLoadSnapshotChunk;
            fromAmino(object: _100.ResponseLoadSnapshotChunkAmino): _100.ResponseLoadSnapshotChunk;
            toAmino(message: _100.ResponseLoadSnapshotChunk): _100.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _100.ResponseLoadSnapshotChunkAminoMsg): _100.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _100.ResponseLoadSnapshotChunkProtoMsg): _100.ResponseLoadSnapshotChunk;
            toProto(message: _100.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _100.ResponseLoadSnapshotChunk): _100.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _100.ResponseApplySnapshotChunk;
            isSDK(o: any): o is _100.ResponseApplySnapshotChunkSDKType;
            isAmino(o: any): o is _100.ResponseApplySnapshotChunkAmino;
            encode(message: _100.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_100.ResponseApplySnapshotChunk>): _100.ResponseApplySnapshotChunk;
            fromAmino(object: _100.ResponseApplySnapshotChunkAmino): _100.ResponseApplySnapshotChunk;
            toAmino(message: _100.ResponseApplySnapshotChunk): _100.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _100.ResponseApplySnapshotChunkAminoMsg): _100.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _100.ResponseApplySnapshotChunkProtoMsg): _100.ResponseApplySnapshotChunk;
            toProto(message: _100.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _100.ResponseApplySnapshotChunk): _100.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _100.ConsensusParams;
            isSDK(o: any): o is _100.ConsensusParamsSDKType;
            isAmino(o: any): o is _100.ConsensusParamsAmino;
            encode(message: _100.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ConsensusParams;
            fromPartial(object: Partial<_100.ConsensusParams>): _100.ConsensusParams;
            fromAmino(object: _100.ConsensusParamsAmino): _100.ConsensusParams;
            toAmino(message: _100.ConsensusParams): _100.ConsensusParamsAmino;
            fromAminoMsg(object: _100.ConsensusParamsAminoMsg): _100.ConsensusParams;
            fromProtoMsg(message: _100.ConsensusParamsProtoMsg): _100.ConsensusParams;
            toProto(message: _100.ConsensusParams): Uint8Array;
            toProtoMsg(message: _100.ConsensusParams): _100.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _100.BlockParams;
            isSDK(o: any): o is _100.BlockParamsSDKType;
            isAmino(o: any): o is _100.BlockParamsAmino;
            encode(message: _100.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.BlockParams;
            fromPartial(object: Partial<_100.BlockParams>): _100.BlockParams;
            fromAmino(object: _100.BlockParamsAmino): _100.BlockParams;
            toAmino(message: _100.BlockParams): _100.BlockParamsAmino;
            fromAminoMsg(object: _100.BlockParamsAminoMsg): _100.BlockParams;
            fromProtoMsg(message: _100.BlockParamsProtoMsg): _100.BlockParams;
            toProto(message: _100.BlockParams): Uint8Array;
            toProtoMsg(message: _100.BlockParams): _100.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            is(o: any): o is _100.LastCommitInfo;
            isSDK(o: any): o is _100.LastCommitInfoSDKType;
            isAmino(o: any): o is _100.LastCommitInfoAmino;
            encode(message: _100.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.LastCommitInfo;
            fromPartial(object: Partial<_100.LastCommitInfo>): _100.LastCommitInfo;
            fromAmino(object: _100.LastCommitInfoAmino): _100.LastCommitInfo;
            toAmino(message: _100.LastCommitInfo): _100.LastCommitInfoAmino;
            fromAminoMsg(object: _100.LastCommitInfoAminoMsg): _100.LastCommitInfo;
            fromProtoMsg(message: _100.LastCommitInfoProtoMsg): _100.LastCommitInfo;
            toProto(message: _100.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _100.LastCommitInfo): _100.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            is(o: any): o is _100.Event;
            isSDK(o: any): o is _100.EventSDKType;
            isAmino(o: any): o is _100.EventAmino;
            encode(message: _100.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.Event;
            fromPartial(object: Partial<_100.Event>): _100.Event;
            fromAmino(object: _100.EventAmino): _100.Event;
            toAmino(message: _100.Event): _100.EventAmino;
            fromAminoMsg(object: _100.EventAminoMsg): _100.Event;
            fromProtoMsg(message: _100.EventProtoMsg): _100.Event;
            toProto(message: _100.Event): Uint8Array;
            toProtoMsg(message: _100.Event): _100.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            is(o: any): o is _100.EventAttribute;
            isSDK(o: any): o is _100.EventAttributeSDKType;
            isAmino(o: any): o is _100.EventAttributeAmino;
            encode(message: _100.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.EventAttribute;
            fromPartial(object: Partial<_100.EventAttribute>): _100.EventAttribute;
            fromAmino(object: _100.EventAttributeAmino): _100.EventAttribute;
            toAmino(message: _100.EventAttribute): _100.EventAttributeAmino;
            fromAminoMsg(object: _100.EventAttributeAminoMsg): _100.EventAttribute;
            fromProtoMsg(message: _100.EventAttributeProtoMsg): _100.EventAttribute;
            toProto(message: _100.EventAttribute): Uint8Array;
            toProtoMsg(message: _100.EventAttribute): _100.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            is(o: any): o is _100.TxResult;
            isSDK(o: any): o is _100.TxResultSDKType;
            isAmino(o: any): o is _100.TxResultAmino;
            encode(message: _100.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.TxResult;
            fromPartial(object: Partial<_100.TxResult>): _100.TxResult;
            fromAmino(object: _100.TxResultAmino): _100.TxResult;
            toAmino(message: _100.TxResult): _100.TxResultAmino;
            fromAminoMsg(object: _100.TxResultAminoMsg): _100.TxResult;
            fromProtoMsg(message: _100.TxResultProtoMsg): _100.TxResult;
            toProto(message: _100.TxResult): Uint8Array;
            toProtoMsg(message: _100.TxResult): _100.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _100.Validator;
            isSDK(o: any): o is _100.ValidatorSDKType;
            isAmino(o: any): o is _100.ValidatorAmino;
            encode(message: _100.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.Validator;
            fromPartial(object: Partial<_100.Validator>): _100.Validator;
            fromAmino(object: _100.ValidatorAmino): _100.Validator;
            toAmino(message: _100.Validator): _100.ValidatorAmino;
            fromAminoMsg(object: _100.ValidatorAminoMsg): _100.Validator;
            fromProtoMsg(message: _100.ValidatorProtoMsg): _100.Validator;
            toProto(message: _100.Validator): Uint8Array;
            toProtoMsg(message: _100.Validator): _100.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            is(o: any): o is _100.ValidatorUpdate;
            isSDK(o: any): o is _100.ValidatorUpdateSDKType;
            isAmino(o: any): o is _100.ValidatorUpdateAmino;
            encode(message: _100.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ValidatorUpdate;
            fromPartial(object: Partial<_100.ValidatorUpdate>): _100.ValidatorUpdate;
            fromAmino(object: _100.ValidatorUpdateAmino): _100.ValidatorUpdate;
            toAmino(message: _100.ValidatorUpdate): _100.ValidatorUpdateAmino;
            fromAminoMsg(object: _100.ValidatorUpdateAminoMsg): _100.ValidatorUpdate;
            fromProtoMsg(message: _100.ValidatorUpdateProtoMsg): _100.ValidatorUpdate;
            toProto(message: _100.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _100.ValidatorUpdate): _100.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            is(o: any): o is _100.VoteInfo;
            isSDK(o: any): o is _100.VoteInfoSDKType;
            isAmino(o: any): o is _100.VoteInfoAmino;
            encode(message: _100.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.VoteInfo;
            fromPartial(object: Partial<_100.VoteInfo>): _100.VoteInfo;
            fromAmino(object: _100.VoteInfoAmino): _100.VoteInfo;
            toAmino(message: _100.VoteInfo): _100.VoteInfoAmino;
            fromAminoMsg(object: _100.VoteInfoAminoMsg): _100.VoteInfo;
            fromProtoMsg(message: _100.VoteInfoProtoMsg): _100.VoteInfo;
            toProto(message: _100.VoteInfo): Uint8Array;
            toProtoMsg(message: _100.VoteInfo): _100.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _100.Evidence;
            isSDK(o: any): o is _100.EvidenceSDKType;
            isAmino(o: any): o is _100.EvidenceAmino;
            encode(message: _100.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.Evidence;
            fromPartial(object: Partial<_100.Evidence>): _100.Evidence;
            fromAmino(object: _100.EvidenceAmino): _100.Evidence;
            toAmino(message: _100.Evidence): _100.EvidenceAmino;
            fromAminoMsg(object: _100.EvidenceAminoMsg): _100.Evidence;
            fromProtoMsg(message: _100.EvidenceProtoMsg): _100.Evidence;
            toProto(message: _100.Evidence): Uint8Array;
            toProtoMsg(message: _100.Evidence): _100.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            is(o: any): o is _100.Snapshot;
            isSDK(o: any): o is _100.SnapshotSDKType;
            isAmino(o: any): o is _100.SnapshotAmino;
            encode(message: _100.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.Snapshot;
            fromPartial(object: Partial<_100.Snapshot>): _100.Snapshot;
            fromAmino(object: _100.SnapshotAmino): _100.Snapshot;
            toAmino(message: _100.Snapshot): _100.SnapshotAmino;
            fromAminoMsg(object: _100.SnapshotAminoMsg): _100.Snapshot;
            fromProtoMsg(message: _100.SnapshotProtoMsg): _100.Snapshot;
            toProto(message: _100.Snapshot): Uint8Array;
            toProtoMsg(message: _100.Snapshot): _100.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            is(o: any): o is _102.Proof;
            isSDK(o: any): o is _102.ProofSDKType;
            isAmino(o: any): o is _102.ProofAmino;
            encode(message: _102.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _102.Proof;
            fromPartial(object: Partial<_102.Proof>): _102.Proof;
            fromAmino(object: _102.ProofAmino): _102.Proof;
            toAmino(message: _102.Proof): _102.ProofAmino;
            fromAminoMsg(object: _102.ProofAminoMsg): _102.Proof;
            fromProtoMsg(message: _102.ProofProtoMsg): _102.Proof;
            toProto(message: _102.Proof): Uint8Array;
            toProtoMsg(message: _102.Proof): _102.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            is(o: any): o is _102.ValueOp;
            isSDK(o: any): o is _102.ValueOpSDKType;
            isAmino(o: any): o is _102.ValueOpAmino;
            encode(message: _102.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _102.ValueOp;
            fromPartial(object: Partial<_102.ValueOp>): _102.ValueOp;
            fromAmino(object: _102.ValueOpAmino): _102.ValueOp;
            toAmino(message: _102.ValueOp): _102.ValueOpAmino;
            fromAminoMsg(object: _102.ValueOpAminoMsg): _102.ValueOp;
            fromProtoMsg(message: _102.ValueOpProtoMsg): _102.ValueOp;
            toProto(message: _102.ValueOp): Uint8Array;
            toProtoMsg(message: _102.ValueOp): _102.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            is(o: any): o is _102.DominoOp;
            isSDK(o: any): o is _102.DominoOpSDKType;
            isAmino(o: any): o is _102.DominoOpAmino;
            encode(message: _102.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _102.DominoOp;
            fromPartial(object: Partial<_102.DominoOp>): _102.DominoOp;
            fromAmino(object: _102.DominoOpAmino): _102.DominoOp;
            toAmino(message: _102.DominoOp): _102.DominoOpAmino;
            fromAminoMsg(object: _102.DominoOpAminoMsg): _102.DominoOp;
            fromProtoMsg(message: _102.DominoOpProtoMsg): _102.DominoOp;
            toProto(message: _102.DominoOp): Uint8Array;
            toProtoMsg(message: _102.DominoOp): _102.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            is(o: any): o is _102.ProofOp;
            isSDK(o: any): o is _102.ProofOpSDKType;
            isAmino(o: any): o is _102.ProofOpAmino;
            encode(message: _102.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _102.ProofOp;
            fromPartial(object: Partial<_102.ProofOp>): _102.ProofOp;
            fromAmino(object: _102.ProofOpAmino): _102.ProofOp;
            toAmino(message: _102.ProofOp): _102.ProofOpAmino;
            fromAminoMsg(object: _102.ProofOpAminoMsg): _102.ProofOp;
            fromProtoMsg(message: _102.ProofOpProtoMsg): _102.ProofOp;
            toProto(message: _102.ProofOp): Uint8Array;
            toProtoMsg(message: _102.ProofOp): _102.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            is(o: any): o is _102.ProofOps;
            isSDK(o: any): o is _102.ProofOpsSDKType;
            isAmino(o: any): o is _102.ProofOpsAmino;
            encode(message: _102.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _102.ProofOps;
            fromPartial(object: Partial<_102.ProofOps>): _102.ProofOps;
            fromAmino(object: _102.ProofOpsAmino): _102.ProofOps;
            toAmino(message: _102.ProofOps): _102.ProofOpsAmino;
            fromAminoMsg(object: _102.ProofOpsAminoMsg): _102.ProofOps;
            fromProtoMsg(message: _102.ProofOpsProtoMsg): _102.ProofOps;
            toProto(message: _102.ProofOps): Uint8Array;
            toProtoMsg(message: _102.ProofOps): _102.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            is(o: any): o is _101.PublicKey;
            isSDK(o: any): o is _101.PublicKeySDKType;
            isAmino(o: any): o is _101.PublicKeyAmino;
            encode(message: _101.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.PublicKey;
            fromPartial(object: Partial<_101.PublicKey>): _101.PublicKey;
            fromAmino(object: _101.PublicKeyAmino): _101.PublicKey;
            toAmino(message: _101.PublicKey): _101.PublicKeyAmino;
            fromAminoMsg(object: _101.PublicKeyAminoMsg): _101.PublicKey;
            fromProtoMsg(message: _101.PublicKeyProtoMsg): _101.PublicKey;
            toProto(message: _101.PublicKey): Uint8Array;
            toProtoMsg(message: _101.PublicKey): _101.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                is(o: any): o is _103.BitArray;
                isSDK(o: any): o is _103.BitArraySDKType;
                isAmino(o: any): o is _103.BitArrayAmino;
                encode(message: _103.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.BitArray;
                fromPartial(object: Partial<_103.BitArray>): _103.BitArray;
                fromAmino(object: _103.BitArrayAmino): _103.BitArray;
                toAmino(message: _103.BitArray): _103.BitArrayAmino;
                fromAminoMsg(object: _103.BitArrayAminoMsg): _103.BitArray;
                fromProtoMsg(message: _103.BitArrayProtoMsg): _103.BitArray;
                toProto(message: _103.BitArray): Uint8Array;
                toProtoMsg(message: _103.BitArray): _103.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        ProtocolVersion: {
            typeUrl: string;
            is(o: any): o is _104.ProtocolVersion;
            isSDK(o: any): o is _104.ProtocolVersionSDKType;
            isAmino(o: any): o is _104.ProtocolVersionAmino;
            encode(message: _104.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ProtocolVersion;
            fromPartial(object: Partial<_104.ProtocolVersion>): _104.ProtocolVersion;
            fromAmino(object: _104.ProtocolVersionAmino): _104.ProtocolVersion;
            toAmino(message: _104.ProtocolVersion): _104.ProtocolVersionAmino;
            fromAminoMsg(object: _104.ProtocolVersionAminoMsg): _104.ProtocolVersion;
            fromProtoMsg(message: _104.ProtocolVersionProtoMsg): _104.ProtocolVersion;
            toProto(message: _104.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _104.ProtocolVersion): _104.ProtocolVersionProtoMsg;
        };
        NodeInfo: {
            typeUrl: string;
            is(o: any): o is _104.NodeInfo;
            isSDK(o: any): o is _104.NodeInfoSDKType;
            isAmino(o: any): o is _104.NodeInfoAmino;
            encode(message: _104.NodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.NodeInfo;
            fromPartial(object: Partial<_104.NodeInfo>): _104.NodeInfo;
            fromAmino(object: _104.NodeInfoAmino): _104.NodeInfo;
            toAmino(message: _104.NodeInfo): _104.NodeInfoAmino;
            fromAminoMsg(object: _104.NodeInfoAminoMsg): _104.NodeInfo;
            fromProtoMsg(message: _104.NodeInfoProtoMsg): _104.NodeInfo;
            toProto(message: _104.NodeInfo): Uint8Array;
            toProtoMsg(message: _104.NodeInfo): _104.NodeInfoProtoMsg;
        };
        NodeInfoOther: {
            typeUrl: string;
            is(o: any): o is _104.NodeInfoOther;
            isSDK(o: any): o is _104.NodeInfoOtherSDKType;
            isAmino(o: any): o is _104.NodeInfoOtherAmino;
            encode(message: _104.NodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.NodeInfoOther;
            fromPartial(object: Partial<_104.NodeInfoOther>): _104.NodeInfoOther;
            fromAmino(object: _104.NodeInfoOtherAmino): _104.NodeInfoOther;
            toAmino(message: _104.NodeInfoOther): _104.NodeInfoOtherAmino;
            fromAminoMsg(object: _104.NodeInfoOtherAminoMsg): _104.NodeInfoOther;
            fromProtoMsg(message: _104.NodeInfoOtherProtoMsg): _104.NodeInfoOther;
            toProto(message: _104.NodeInfoOther): Uint8Array;
            toProtoMsg(message: _104.NodeInfoOther): _104.NodeInfoOtherProtoMsg;
        };
        PeerInfo: {
            typeUrl: string;
            is(o: any): o is _104.PeerInfo;
            isSDK(o: any): o is _104.PeerInfoSDKType;
            isAmino(o: any): o is _104.PeerInfoAmino;
            encode(message: _104.PeerInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.PeerInfo;
            fromPartial(object: Partial<_104.PeerInfo>): _104.PeerInfo;
            fromAmino(object: _104.PeerInfoAmino): _104.PeerInfo;
            toAmino(message: _104.PeerInfo): _104.PeerInfoAmino;
            fromAminoMsg(object: _104.PeerInfoAminoMsg): _104.PeerInfo;
            fromProtoMsg(message: _104.PeerInfoProtoMsg): _104.PeerInfo;
            toProto(message: _104.PeerInfo): Uint8Array;
            toProtoMsg(message: _104.PeerInfo): _104.PeerInfoProtoMsg;
        };
        PeerAddressInfo: {
            typeUrl: string;
            is(o: any): o is _104.PeerAddressInfo;
            isSDK(o: any): o is _104.PeerAddressInfoSDKType;
            isAmino(o: any): o is _104.PeerAddressInfoAmino;
            encode(message: _104.PeerAddressInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.PeerAddressInfo;
            fromPartial(object: Partial<_104.PeerAddressInfo>): _104.PeerAddressInfo;
            fromAmino(object: _104.PeerAddressInfoAmino): _104.PeerAddressInfo;
            toAmino(message: _104.PeerAddressInfo): _104.PeerAddressInfoAmino;
            fromAminoMsg(object: _104.PeerAddressInfoAminoMsg): _104.PeerAddressInfo;
            fromProtoMsg(message: _104.PeerAddressInfoProtoMsg): _104.PeerAddressInfo;
            toProto(message: _104.PeerAddressInfo): Uint8Array;
            toProtoMsg(message: _104.PeerAddressInfo): _104.PeerAddressInfoProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            is(o: any): o is _109.ValidatorSet;
            isSDK(o: any): o is _109.ValidatorSetSDKType;
            isAmino(o: any): o is _109.ValidatorSetAmino;
            encode(message: _109.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.ValidatorSet;
            fromPartial(object: Partial<_109.ValidatorSet>): _109.ValidatorSet;
            fromAmino(object: _109.ValidatorSetAmino): _109.ValidatorSet;
            toAmino(message: _109.ValidatorSet): _109.ValidatorSetAmino;
            fromAminoMsg(object: _109.ValidatorSetAminoMsg): _109.ValidatorSet;
            fromProtoMsg(message: _109.ValidatorSetProtoMsg): _109.ValidatorSet;
            toProto(message: _109.ValidatorSet): Uint8Array;
            toProtoMsg(message: _109.ValidatorSet): _109.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _109.Validator;
            isSDK(o: any): o is _109.ValidatorSDKType;
            isAmino(o: any): o is _109.ValidatorAmino;
            encode(message: _109.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.Validator;
            fromPartial(object: Partial<_109.Validator>): _109.Validator;
            fromAmino(object: _109.ValidatorAmino): _109.Validator;
            toAmino(message: _109.Validator): _109.ValidatorAmino;
            fromAminoMsg(object: _109.ValidatorAminoMsg): _109.Validator;
            fromProtoMsg(message: _109.ValidatorProtoMsg): _109.Validator;
            toProto(message: _109.Validator): Uint8Array;
            toProtoMsg(message: _109.Validator): _109.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            is(o: any): o is _109.SimpleValidator;
            isSDK(o: any): o is _109.SimpleValidatorSDKType;
            isAmino(o: any): o is _109.SimpleValidatorAmino;
            encode(message: _109.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.SimpleValidator;
            fromPartial(object: Partial<_109.SimpleValidator>): _109.SimpleValidator;
            fromAmino(object: _109.SimpleValidatorAmino): _109.SimpleValidator;
            toAmino(message: _109.SimpleValidator): _109.SimpleValidatorAmino;
            fromAminoMsg(object: _109.SimpleValidatorAminoMsg): _109.SimpleValidator;
            fromProtoMsg(message: _109.SimpleValidatorProtoMsg): _109.SimpleValidator;
            toProto(message: _109.SimpleValidator): Uint8Array;
            toProtoMsg(message: _109.SimpleValidator): _109.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _108.BlockIDFlag;
        blockIDFlagToJSON(object: _108.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _108.SignedMsgType;
        signedMsgTypeToJSON(object: _108.SignedMsgType): string;
        BlockIDFlag: typeof _108.BlockIDFlag;
        BlockIDFlagSDKType: typeof _108.BlockIDFlag;
        BlockIDFlagAmino: typeof _108.BlockIDFlag;
        SignedMsgType: typeof _108.SignedMsgType;
        SignedMsgTypeSDKType: typeof _108.SignedMsgType;
        SignedMsgTypeAmino: typeof _108.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            is(o: any): o is _108.PartSetHeader;
            isSDK(o: any): o is _108.PartSetHeaderSDKType;
            isAmino(o: any): o is _108.PartSetHeaderAmino;
            encode(message: _108.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.PartSetHeader;
            fromPartial(object: Partial<_108.PartSetHeader>): _108.PartSetHeader;
            fromAmino(object: _108.PartSetHeaderAmino): _108.PartSetHeader;
            toAmino(message: _108.PartSetHeader): _108.PartSetHeaderAmino;
            fromAminoMsg(object: _108.PartSetHeaderAminoMsg): _108.PartSetHeader;
            fromProtoMsg(message: _108.PartSetHeaderProtoMsg): _108.PartSetHeader;
            toProto(message: _108.PartSetHeader): Uint8Array;
            toProtoMsg(message: _108.PartSetHeader): _108.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            is(o: any): o is _108.Part;
            isSDK(o: any): o is _108.PartSDKType;
            isAmino(o: any): o is _108.PartAmino;
            encode(message: _108.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.Part;
            fromPartial(object: Partial<_108.Part>): _108.Part;
            fromAmino(object: _108.PartAmino): _108.Part;
            toAmino(message: _108.Part): _108.PartAmino;
            fromAminoMsg(object: _108.PartAminoMsg): _108.Part;
            fromProtoMsg(message: _108.PartProtoMsg): _108.Part;
            toProto(message: _108.Part): Uint8Array;
            toProtoMsg(message: _108.Part): _108.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            is(o: any): o is _108.BlockID;
            isSDK(o: any): o is _108.BlockIDSDKType;
            isAmino(o: any): o is _108.BlockIDAmino;
            encode(message: _108.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.BlockID;
            fromPartial(object: Partial<_108.BlockID>): _108.BlockID;
            fromAmino(object: _108.BlockIDAmino): _108.BlockID;
            toAmino(message: _108.BlockID): _108.BlockIDAmino;
            fromAminoMsg(object: _108.BlockIDAminoMsg): _108.BlockID;
            fromProtoMsg(message: _108.BlockIDProtoMsg): _108.BlockID;
            toProto(message: _108.BlockID): Uint8Array;
            toProtoMsg(message: _108.BlockID): _108.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            is(o: any): o is _108.Header;
            isSDK(o: any): o is _108.HeaderSDKType;
            isAmino(o: any): o is _108.HeaderAmino;
            encode(message: _108.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.Header;
            fromPartial(object: Partial<_108.Header>): _108.Header;
            fromAmino(object: _108.HeaderAmino): _108.Header;
            toAmino(message: _108.Header): _108.HeaderAmino;
            fromAminoMsg(object: _108.HeaderAminoMsg): _108.Header;
            fromProtoMsg(message: _108.HeaderProtoMsg): _108.Header;
            toProto(message: _108.Header): Uint8Array;
            toProtoMsg(message: _108.Header): _108.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            is(o: any): o is _108.Data;
            isSDK(o: any): o is _108.DataSDKType;
            isAmino(o: any): o is _108.DataAmino;
            encode(message: _108.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.Data;
            fromPartial(object: Partial<_108.Data>): _108.Data;
            fromAmino(object: _108.DataAmino): _108.Data;
            toAmino(message: _108.Data): _108.DataAmino;
            fromAminoMsg(object: _108.DataAminoMsg): _108.Data;
            fromProtoMsg(message: _108.DataProtoMsg): _108.Data;
            toProto(message: _108.Data): Uint8Array;
            toProtoMsg(message: _108.Data): _108.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            is(o: any): o is _108.Vote;
            isSDK(o: any): o is _108.VoteSDKType;
            isAmino(o: any): o is _108.VoteAmino;
            encode(message: _108.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.Vote;
            fromPartial(object: Partial<_108.Vote>): _108.Vote;
            fromAmino(object: _108.VoteAmino): _108.Vote;
            toAmino(message: _108.Vote): _108.VoteAmino;
            fromAminoMsg(object: _108.VoteAminoMsg): _108.Vote;
            fromProtoMsg(message: _108.VoteProtoMsg): _108.Vote;
            toProto(message: _108.Vote): Uint8Array;
            toProtoMsg(message: _108.Vote): _108.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            is(o: any): o is _108.Commit;
            isSDK(o: any): o is _108.CommitSDKType;
            isAmino(o: any): o is _108.CommitAmino;
            encode(message: _108.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.Commit;
            fromPartial(object: Partial<_108.Commit>): _108.Commit;
            fromAmino(object: _108.CommitAmino): _108.Commit;
            toAmino(message: _108.Commit): _108.CommitAmino;
            fromAminoMsg(object: _108.CommitAminoMsg): _108.Commit;
            fromProtoMsg(message: _108.CommitProtoMsg): _108.Commit;
            toProto(message: _108.Commit): Uint8Array;
            toProtoMsg(message: _108.Commit): _108.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            is(o: any): o is _108.CommitSig;
            isSDK(o: any): o is _108.CommitSigSDKType;
            isAmino(o: any): o is _108.CommitSigAmino;
            encode(message: _108.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.CommitSig;
            fromPartial(object: Partial<_108.CommitSig>): _108.CommitSig;
            fromAmino(object: _108.CommitSigAmino): _108.CommitSig;
            toAmino(message: _108.CommitSig): _108.CommitSigAmino;
            fromAminoMsg(object: _108.CommitSigAminoMsg): _108.CommitSig;
            fromProtoMsg(message: _108.CommitSigProtoMsg): _108.CommitSig;
            toProto(message: _108.CommitSig): Uint8Array;
            toProtoMsg(message: _108.CommitSig): _108.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            is(o: any): o is _108.Proposal;
            isSDK(o: any): o is _108.ProposalSDKType;
            isAmino(o: any): o is _108.ProposalAmino;
            encode(message: _108.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.Proposal;
            fromPartial(object: Partial<_108.Proposal>): _108.Proposal;
            fromAmino(object: _108.ProposalAmino): _108.Proposal;
            toAmino(message: _108.Proposal): _108.ProposalAmino;
            fromAminoMsg(object: _108.ProposalAminoMsg): _108.Proposal;
            fromProtoMsg(message: _108.ProposalProtoMsg): _108.Proposal;
            toProto(message: _108.Proposal): Uint8Array;
            toProtoMsg(message: _108.Proposal): _108.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            is(o: any): o is _108.SignedHeader;
            isSDK(o: any): o is _108.SignedHeaderSDKType;
            isAmino(o: any): o is _108.SignedHeaderAmino;
            encode(message: _108.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.SignedHeader;
            fromPartial(object: Partial<_108.SignedHeader>): _108.SignedHeader;
            fromAmino(object: _108.SignedHeaderAmino): _108.SignedHeader;
            toAmino(message: _108.SignedHeader): _108.SignedHeaderAmino;
            fromAminoMsg(object: _108.SignedHeaderAminoMsg): _108.SignedHeader;
            fromProtoMsg(message: _108.SignedHeaderProtoMsg): _108.SignedHeader;
            toProto(message: _108.SignedHeader): Uint8Array;
            toProtoMsg(message: _108.SignedHeader): _108.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            is(o: any): o is _108.LightBlock;
            isSDK(o: any): o is _108.LightBlockSDKType;
            isAmino(o: any): o is _108.LightBlockAmino;
            encode(message: _108.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.LightBlock;
            fromPartial(object: Partial<_108.LightBlock>): _108.LightBlock;
            fromAmino(object: _108.LightBlockAmino): _108.LightBlock;
            toAmino(message: _108.LightBlock): _108.LightBlockAmino;
            fromAminoMsg(object: _108.LightBlockAminoMsg): _108.LightBlock;
            fromProtoMsg(message: _108.LightBlockProtoMsg): _108.LightBlock;
            toProto(message: _108.LightBlock): Uint8Array;
            toProtoMsg(message: _108.LightBlock): _108.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            is(o: any): o is _108.BlockMeta;
            isSDK(o: any): o is _108.BlockMetaSDKType;
            isAmino(o: any): o is _108.BlockMetaAmino;
            encode(message: _108.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.BlockMeta;
            fromPartial(object: Partial<_108.BlockMeta>): _108.BlockMeta;
            fromAmino(object: _108.BlockMetaAmino): _108.BlockMeta;
            toAmino(message: _108.BlockMeta): _108.BlockMetaAmino;
            fromAminoMsg(object: _108.BlockMetaAminoMsg): _108.BlockMeta;
            fromProtoMsg(message: _108.BlockMetaProtoMsg): _108.BlockMeta;
            toProto(message: _108.BlockMeta): Uint8Array;
            toProtoMsg(message: _108.BlockMeta): _108.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            is(o: any): o is _108.TxProof;
            isSDK(o: any): o is _108.TxProofSDKType;
            isAmino(o: any): o is _108.TxProofAmino;
            encode(message: _108.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.TxProof;
            fromPartial(object: Partial<_108.TxProof>): _108.TxProof;
            fromAmino(object: _108.TxProofAmino): _108.TxProof;
            toAmino(message: _108.TxProof): _108.TxProofAmino;
            fromAminoMsg(object: _108.TxProofAminoMsg): _108.TxProof;
            fromProtoMsg(message: _108.TxProofProtoMsg): _108.TxProof;
            toProto(message: _108.TxProof): Uint8Array;
            toProtoMsg(message: _108.TxProof): _108.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _107.ConsensusParams;
            isSDK(o: any): o is _107.ConsensusParamsSDKType;
            isAmino(o: any): o is _107.ConsensusParamsAmino;
            encode(message: _107.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _107.ConsensusParams;
            fromPartial(object: Partial<_107.ConsensusParams>): _107.ConsensusParams;
            fromAmino(object: _107.ConsensusParamsAmino): _107.ConsensusParams;
            toAmino(message: _107.ConsensusParams): _107.ConsensusParamsAmino;
            fromAminoMsg(object: _107.ConsensusParamsAminoMsg): _107.ConsensusParams;
            fromProtoMsg(message: _107.ConsensusParamsProtoMsg): _107.ConsensusParams;
            toProto(message: _107.ConsensusParams): Uint8Array;
            toProtoMsg(message: _107.ConsensusParams): _107.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _107.BlockParams;
            isSDK(o: any): o is _107.BlockParamsSDKType;
            isAmino(o: any): o is _107.BlockParamsAmino;
            encode(message: _107.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _107.BlockParams;
            fromPartial(object: Partial<_107.BlockParams>): _107.BlockParams;
            fromAmino(object: _107.BlockParamsAmino): _107.BlockParams;
            toAmino(message: _107.BlockParams): _107.BlockParamsAmino;
            fromAminoMsg(object: _107.BlockParamsAminoMsg): _107.BlockParams;
            fromProtoMsg(message: _107.BlockParamsProtoMsg): _107.BlockParams;
            toProto(message: _107.BlockParams): Uint8Array;
            toProtoMsg(message: _107.BlockParams): _107.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            is(o: any): o is _107.EvidenceParams;
            isSDK(o: any): o is _107.EvidenceParamsSDKType;
            isAmino(o: any): o is _107.EvidenceParamsAmino;
            encode(message: _107.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _107.EvidenceParams;
            fromPartial(object: Partial<_107.EvidenceParams>): _107.EvidenceParams;
            fromAmino(object: _107.EvidenceParamsAmino): _107.EvidenceParams;
            toAmino(message: _107.EvidenceParams): _107.EvidenceParamsAmino;
            fromAminoMsg(object: _107.EvidenceParamsAminoMsg): _107.EvidenceParams;
            fromProtoMsg(message: _107.EvidenceParamsProtoMsg): _107.EvidenceParams;
            toProto(message: _107.EvidenceParams): Uint8Array;
            toProtoMsg(message: _107.EvidenceParams): _107.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            is(o: any): o is _107.ValidatorParams;
            isSDK(o: any): o is _107.ValidatorParamsSDKType;
            isAmino(o: any): o is _107.ValidatorParamsAmino;
            encode(message: _107.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _107.ValidatorParams;
            fromPartial(object: Partial<_107.ValidatorParams>): _107.ValidatorParams;
            fromAmino(object: _107.ValidatorParamsAmino): _107.ValidatorParams;
            toAmino(message: _107.ValidatorParams): _107.ValidatorParamsAmino;
            fromAminoMsg(object: _107.ValidatorParamsAminoMsg): _107.ValidatorParams;
            fromProtoMsg(message: _107.ValidatorParamsProtoMsg): _107.ValidatorParams;
            toProto(message: _107.ValidatorParams): Uint8Array;
            toProtoMsg(message: _107.ValidatorParams): _107.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            is(o: any): o is _107.VersionParams;
            isSDK(o: any): o is _107.VersionParamsSDKType;
            isAmino(o: any): o is _107.VersionParamsAmino;
            encode(message: _107.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _107.VersionParams;
            fromPartial(object: Partial<_107.VersionParams>): _107.VersionParams;
            fromAmino(object: _107.VersionParamsAmino): _107.VersionParams;
            toAmino(message: _107.VersionParams): _107.VersionParamsAmino;
            fromAminoMsg(object: _107.VersionParamsAminoMsg): _107.VersionParams;
            fromProtoMsg(message: _107.VersionParamsProtoMsg): _107.VersionParams;
            toProto(message: _107.VersionParams): Uint8Array;
            toProtoMsg(message: _107.VersionParams): _107.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            is(o: any): o is _107.HashedParams;
            isSDK(o: any): o is _107.HashedParamsSDKType;
            isAmino(o: any): o is _107.HashedParamsAmino;
            encode(message: _107.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _107.HashedParams;
            fromPartial(object: Partial<_107.HashedParams>): _107.HashedParams;
            fromAmino(object: _107.HashedParamsAmino): _107.HashedParams;
            toAmino(message: _107.HashedParams): _107.HashedParamsAmino;
            fromAminoMsg(object: _107.HashedParamsAminoMsg): _107.HashedParams;
            fromProtoMsg(message: _107.HashedParamsProtoMsg): _107.HashedParams;
            toProto(message: _107.HashedParams): Uint8Array;
            toProtoMsg(message: _107.HashedParams): _107.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _106.Evidence;
            isSDK(o: any): o is _106.EvidenceSDKType;
            isAmino(o: any): o is _106.EvidenceAmino;
            encode(message: _106.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.Evidence;
            fromPartial(object: Partial<_106.Evidence>): _106.Evidence;
            fromAmino(object: _106.EvidenceAmino): _106.Evidence;
            toAmino(message: _106.Evidence): _106.EvidenceAmino;
            fromAminoMsg(object: _106.EvidenceAminoMsg): _106.Evidence;
            fromProtoMsg(message: _106.EvidenceProtoMsg): _106.Evidence;
            toProto(message: _106.Evidence): Uint8Array;
            toProtoMsg(message: _106.Evidence): _106.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            is(o: any): o is _106.DuplicateVoteEvidence;
            isSDK(o: any): o is _106.DuplicateVoteEvidenceSDKType;
            isAmino(o: any): o is _106.DuplicateVoteEvidenceAmino;
            encode(message: _106.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.DuplicateVoteEvidence;
            fromPartial(object: Partial<_106.DuplicateVoteEvidence>): _106.DuplicateVoteEvidence;
            fromAmino(object: _106.DuplicateVoteEvidenceAmino): _106.DuplicateVoteEvidence;
            toAmino(message: _106.DuplicateVoteEvidence): _106.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _106.DuplicateVoteEvidenceAminoMsg): _106.DuplicateVoteEvidence;
            fromProtoMsg(message: _106.DuplicateVoteEvidenceProtoMsg): _106.DuplicateVoteEvidence;
            toProto(message: _106.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _106.DuplicateVoteEvidence): _106.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            is(o: any): o is _106.LightClientAttackEvidence;
            isSDK(o: any): o is _106.LightClientAttackEvidenceSDKType;
            isAmino(o: any): o is _106.LightClientAttackEvidenceAmino;
            encode(message: _106.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.LightClientAttackEvidence;
            fromPartial(object: Partial<_106.LightClientAttackEvidence>): _106.LightClientAttackEvidence;
            fromAmino(object: _106.LightClientAttackEvidenceAmino): _106.LightClientAttackEvidence;
            toAmino(message: _106.LightClientAttackEvidence): _106.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _106.LightClientAttackEvidenceAminoMsg): _106.LightClientAttackEvidence;
            fromProtoMsg(message: _106.LightClientAttackEvidenceProtoMsg): _106.LightClientAttackEvidence;
            toProto(message: _106.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _106.LightClientAttackEvidence): _106.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            is(o: any): o is _106.EvidenceList;
            isSDK(o: any): o is _106.EvidenceListSDKType;
            isAmino(o: any): o is _106.EvidenceListAmino;
            encode(message: _106.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.EvidenceList;
            fromPartial(object: Partial<_106.EvidenceList>): _106.EvidenceList;
            fromAmino(object: _106.EvidenceListAmino): _106.EvidenceList;
            toAmino(message: _106.EvidenceList): _106.EvidenceListAmino;
            fromAminoMsg(object: _106.EvidenceListAminoMsg): _106.EvidenceList;
            fromProtoMsg(message: _106.EvidenceListProtoMsg): _106.EvidenceList;
            toProto(message: _106.EvidenceList): Uint8Array;
            toProtoMsg(message: _106.EvidenceList): _106.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            is(o: any): o is _105.Block;
            isSDK(o: any): o is _105.BlockSDKType;
            isAmino(o: any): o is _105.BlockAmino;
            encode(message: _105.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.Block;
            fromPartial(object: Partial<_105.Block>): _105.Block;
            fromAmino(object: _105.BlockAmino): _105.Block;
            toAmino(message: _105.Block): _105.BlockAmino;
            fromAminoMsg(object: _105.BlockAminoMsg): _105.Block;
            fromProtoMsg(message: _105.BlockProtoMsg): _105.Block;
            toProto(message: _105.Block): Uint8Array;
            toProtoMsg(message: _105.Block): _105.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            is(o: any): o is _110.App;
            isSDK(o: any): o is _110.AppSDKType;
            isAmino(o: any): o is _110.AppAmino;
            encode(message: _110.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _110.App;
            fromPartial(object: Partial<_110.App>): _110.App;
            fromAmino(object: _110.AppAmino): _110.App;
            toAmino(message: _110.App): _110.AppAmino;
            fromAminoMsg(object: _110.AppAminoMsg): _110.App;
            fromProtoMsg(message: _110.AppProtoMsg): _110.App;
            toProto(message: _110.App): Uint8Array;
            toProtoMsg(message: _110.App): _110.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            is(o: any): o is _110.Consensus;
            isSDK(o: any): o is _110.ConsensusSDKType;
            isAmino(o: any): o is _110.ConsensusAmino;
            encode(message: _110.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _110.Consensus;
            fromPartial(object: Partial<_110.Consensus>): _110.Consensus;
            fromAmino(object: _110.ConsensusAmino): _110.Consensus;
            toAmino(message: _110.Consensus): _110.ConsensusAmino;
            fromAminoMsg(object: _110.ConsensusAminoMsg): _110.Consensus;
            fromProtoMsg(message: _110.ConsensusProtoMsg): _110.Consensus;
            toProto(message: _110.Consensus): Uint8Array;
            toProtoMsg(message: _110.Consensus): _110.ConsensusProtoMsg;
        };
    };
}
