import { MsgCreatePool, MsgDepositWithinBatch, MsgWithdrawWithinBatch, MsgSwapWithinBatch } from "./tx";
export const registry = [["/Victor118.liquidity.v1beta1.MsgCreatePool", MsgCreatePool], ["/Victor118.liquidity.v1beta1.MsgDepositWithinBatch", MsgDepositWithinBatch], ["/Victor118.liquidity.v1beta1.MsgWithdrawWithinBatch", MsgWithdrawWithinBatch], ["/Victor118.liquidity.v1beta1.MsgSwapWithinBatch", MsgSwapWithinBatch]];
export const load = (protoRegistry) => {
    registry.forEach(([typeUrl, mod]) => {
        protoRegistry.register(typeUrl, mod);
    });
};
export const MessageComposer = {
    encoded: {
        createPool(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgCreatePool",
                value: MsgCreatePool.encode(value).finish()
            };
        },
        depositWithinBatch(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgDepositWithinBatch",
                value: MsgDepositWithinBatch.encode(value).finish()
            };
        },
        withdrawWithinBatch(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgWithdrawWithinBatch",
                value: MsgWithdrawWithinBatch.encode(value).finish()
            };
        },
        swap(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgSwapWithinBatch",
                value: MsgSwapWithinBatch.encode(value).finish()
            };
        }
    },
    withTypeUrl: {
        createPool(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgCreatePool",
                value
            };
        },
        depositWithinBatch(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgDepositWithinBatch",
                value
            };
        },
        withdrawWithinBatch(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgWithdrawWithinBatch",
                value
            };
        },
        swap(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgSwapWithinBatch",
                value
            };
        }
    },
    fromPartial: {
        createPool(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgCreatePool",
                value: MsgCreatePool.fromPartial(value)
            };
        },
        depositWithinBatch(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgDepositWithinBatch",
                value: MsgDepositWithinBatch.fromPartial(value)
            };
        },
        withdrawWithinBatch(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgWithdrawWithinBatch",
                value: MsgWithdrawWithinBatch.fromPartial(value)
            };
        },
        swap(value) {
            return {
                typeUrl: "/Victor118.liquidity.v1beta1.MsgSwapWithinBatch",
                value: MsgSwapWithinBatch.fromPartial(value)
            };
        }
    }
};
//# sourceMappingURL=tx.registry.js.map