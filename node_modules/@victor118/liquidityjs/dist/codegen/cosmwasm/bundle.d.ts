import * as _65 from "./wasm/v1/authz";
import * as _66 from "./wasm/v1/genesis";
import * as _67 from "./wasm/v1/ibc";
import * as _68 from "./wasm/v1/proposal";
import * as _69 from "./wasm/v1/query";
import * as _70 from "./wasm/v1/tx";
import * as _71 from "./wasm/v1/types";
import * as _173 from "./wasm/v1/query.lcd";
import * as _174 from "./wasm/v1/query.rpc.Query";
import * as _175 from "./wasm/v1/tx.rpc.msg";
export declare namespace cosmwasm {
    namespace wasm {
        const v1: {
            MsgClientImpl: typeof _175.MsgClientImpl;
            QueryClientImpl: typeof _174.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                contractInfo(request: _69.QueryContractInfoRequest): Promise<_69.QueryContractInfoResponse>;
                contractHistory(request: _69.QueryContractHistoryRequest): Promise<_69.QueryContractHistoryResponse>;
                contractsByCode(request: _69.QueryContractsByCodeRequest): Promise<_69.QueryContractsByCodeResponse>;
                allContractState(request: _69.QueryAllContractStateRequest): Promise<_69.QueryAllContractStateResponse>;
                rawContractState(request: _69.QueryRawContractStateRequest): Promise<_69.QueryRawContractStateResponse>;
                smartContractState(request: _69.QuerySmartContractStateRequest): Promise<_69.QuerySmartContractStateResponse>;
                code(request: _69.QueryCodeRequest): Promise<_69.QueryCodeResponse>;
                codes(request?: _69.QueryCodesRequest): Promise<_69.QueryCodesResponse>;
                pinnedCodes(request?: _69.QueryPinnedCodesRequest): Promise<_69.QueryPinnedCodesResponse>;
                params(request?: _69.QueryParamsRequest): Promise<_69.QueryParamsResponse>;
                contractsByCreator(request: _69.QueryContractsByCreatorRequest): Promise<_69.QueryContractsByCreatorResponse>;
            };
            LCDQueryClient: typeof _173.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    storeCode(value: _70.MsgStoreCode): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    instantiateContract(value: _70.MsgInstantiateContract): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    instantiateContract2(value: _70.MsgInstantiateContract2): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    executeContract(value: _70.MsgExecuteContract): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    migrateContract(value: _70.MsgMigrateContract): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateAdmin(value: _70.MsgUpdateAdmin): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    clearAdmin(value: _70.MsgClearAdmin): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    storeCode(value: _70.MsgStoreCode): {
                        typeUrl: string;
                        value: _70.MsgStoreCode;
                    };
                    instantiateContract(value: _70.MsgInstantiateContract): {
                        typeUrl: string;
                        value: _70.MsgInstantiateContract;
                    };
                    instantiateContract2(value: _70.MsgInstantiateContract2): {
                        typeUrl: string;
                        value: _70.MsgInstantiateContract2;
                    };
                    executeContract(value: _70.MsgExecuteContract): {
                        typeUrl: string;
                        value: _70.MsgExecuteContract;
                    };
                    migrateContract(value: _70.MsgMigrateContract): {
                        typeUrl: string;
                        value: _70.MsgMigrateContract;
                    };
                    updateAdmin(value: _70.MsgUpdateAdmin): {
                        typeUrl: string;
                        value: _70.MsgUpdateAdmin;
                    };
                    clearAdmin(value: _70.MsgClearAdmin): {
                        typeUrl: string;
                        value: _70.MsgClearAdmin;
                    };
                };
                fromPartial: {
                    storeCode(value: _70.MsgStoreCode): {
                        typeUrl: string;
                        value: _70.MsgStoreCode;
                    };
                    instantiateContract(value: _70.MsgInstantiateContract): {
                        typeUrl: string;
                        value: _70.MsgInstantiateContract;
                    };
                    instantiateContract2(value: _70.MsgInstantiateContract2): {
                        typeUrl: string;
                        value: _70.MsgInstantiateContract2;
                    };
                    executeContract(value: _70.MsgExecuteContract): {
                        typeUrl: string;
                        value: _70.MsgExecuteContract;
                    };
                    migrateContract(value: _70.MsgMigrateContract): {
                        typeUrl: string;
                        value: _70.MsgMigrateContract;
                    };
                    updateAdmin(value: _70.MsgUpdateAdmin): {
                        typeUrl: string;
                        value: _70.MsgUpdateAdmin;
                    };
                    clearAdmin(value: _70.MsgClearAdmin): {
                        typeUrl: string;
                        value: _70.MsgClearAdmin;
                    };
                };
            };
            AminoConverter: {
                "/cosmwasm.wasm.v1.MsgStoreCode": {
                    aminoType: string;
                    toAmino: (message: _70.MsgStoreCode) => _70.MsgStoreCodeAmino;
                    fromAmino: (object: _70.MsgStoreCodeAmino) => _70.MsgStoreCode;
                };
                "/cosmwasm.wasm.v1.MsgInstantiateContract": {
                    aminoType: string;
                    toAmino: (message: _70.MsgInstantiateContract) => _70.MsgInstantiateContractAmino;
                    fromAmino: (object: _70.MsgInstantiateContractAmino) => _70.MsgInstantiateContract;
                };
                "/cosmwasm.wasm.v1.MsgInstantiateContract2": {
                    aminoType: string;
                    toAmino: (message: _70.MsgInstantiateContract2) => _70.MsgInstantiateContract2Amino;
                    fromAmino: (object: _70.MsgInstantiateContract2Amino) => _70.MsgInstantiateContract2;
                };
                "/cosmwasm.wasm.v1.MsgExecuteContract": {
                    aminoType: string;
                    toAmino: (message: _70.MsgExecuteContract) => _70.MsgExecuteContractAmino;
                    fromAmino: (object: _70.MsgExecuteContractAmino) => _70.MsgExecuteContract;
                };
                "/cosmwasm.wasm.v1.MsgMigrateContract": {
                    aminoType: string;
                    toAmino: (message: _70.MsgMigrateContract) => _70.MsgMigrateContractAmino;
                    fromAmino: (object: _70.MsgMigrateContractAmino) => _70.MsgMigrateContract;
                };
                "/cosmwasm.wasm.v1.MsgUpdateAdmin": {
                    aminoType: string;
                    toAmino: (message: _70.MsgUpdateAdmin) => _70.MsgUpdateAdminAmino;
                    fromAmino: (object: _70.MsgUpdateAdminAmino) => _70.MsgUpdateAdmin;
                };
                "/cosmwasm.wasm.v1.MsgClearAdmin": {
                    aminoType: string;
                    toAmino: (message: _70.MsgClearAdmin) => _70.MsgClearAdminAmino;
                    fromAmino: (object: _70.MsgClearAdminAmino) => _70.MsgClearAdmin;
                };
            };
            accessTypeFromJSON(object: any): _71.AccessType;
            accessTypeToJSON(object: _71.AccessType): string;
            contractCodeHistoryOperationTypeFromJSON(object: any): _71.ContractCodeHistoryOperationType;
            contractCodeHistoryOperationTypeToJSON(object: _71.ContractCodeHistoryOperationType): string;
            AccessType: typeof _71.AccessType;
            AccessTypeSDKType: typeof _71.AccessType;
            AccessTypeAmino: typeof _71.AccessType;
            ContractCodeHistoryOperationType: typeof _71.ContractCodeHistoryOperationType;
            ContractCodeHistoryOperationTypeSDKType: typeof _71.ContractCodeHistoryOperationType;
            ContractCodeHistoryOperationTypeAmino: typeof _71.ContractCodeHistoryOperationType;
            AccessTypeParam: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _71.AccessTypeParam;
                isSDK(o: any): o is _71.AccessTypeParamSDKType;
                isAmino(o: any): o is _71.AccessTypeParamAmino;
                encode(message: _71.AccessTypeParam, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.AccessTypeParam;
                fromPartial(object: Partial<_71.AccessTypeParam>): _71.AccessTypeParam;
                fromAmino(object: _71.AccessTypeParamAmino): _71.AccessTypeParam;
                toAmino(message: _71.AccessTypeParam): _71.AccessTypeParamAmino;
                fromAminoMsg(object: _71.AccessTypeParamAminoMsg): _71.AccessTypeParam;
                toAminoMsg(message: _71.AccessTypeParam): _71.AccessTypeParamAminoMsg;
                fromProtoMsg(message: _71.AccessTypeParamProtoMsg): _71.AccessTypeParam;
                toProto(message: _71.AccessTypeParam): Uint8Array;
                toProtoMsg(message: _71.AccessTypeParam): _71.AccessTypeParamProtoMsg;
            };
            AccessConfig: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _71.AccessConfig;
                isSDK(o: any): o is _71.AccessConfigSDKType;
                isAmino(o: any): o is _71.AccessConfigAmino;
                encode(message: _71.AccessConfig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.AccessConfig;
                fromPartial(object: Partial<_71.AccessConfig>): _71.AccessConfig;
                fromAmino(object: _71.AccessConfigAmino): _71.AccessConfig;
                toAmino(message: _71.AccessConfig): _71.AccessConfigAmino;
                fromAminoMsg(object: _71.AccessConfigAminoMsg): _71.AccessConfig;
                toAminoMsg(message: _71.AccessConfig): _71.AccessConfigAminoMsg;
                fromProtoMsg(message: _71.AccessConfigProtoMsg): _71.AccessConfig;
                toProto(message: _71.AccessConfig): Uint8Array;
                toProtoMsg(message: _71.AccessConfig): _71.AccessConfigProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _71.Params;
                isSDK(o: any): o is _71.ParamsSDKType;
                isAmino(o: any): o is _71.ParamsAmino;
                encode(message: _71.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.Params;
                fromPartial(object: Partial<_71.Params>): _71.Params;
                fromAmino(object: _71.ParamsAmino): _71.Params;
                toAmino(message: _71.Params): _71.ParamsAmino;
                fromAminoMsg(object: _71.ParamsAminoMsg): _71.Params;
                toAminoMsg(message: _71.Params): _71.ParamsAminoMsg;
                fromProtoMsg(message: _71.ParamsProtoMsg): _71.Params;
                toProto(message: _71.Params): Uint8Array;
                toProtoMsg(message: _71.Params): _71.ParamsProtoMsg;
            };
            CodeInfo: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _71.CodeInfo;
                isSDK(o: any): o is _71.CodeInfoSDKType;
                isAmino(o: any): o is _71.CodeInfoAmino;
                encode(message: _71.CodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.CodeInfo;
                fromPartial(object: Partial<_71.CodeInfo>): _71.CodeInfo;
                fromAmino(object: _71.CodeInfoAmino): _71.CodeInfo;
                toAmino(message: _71.CodeInfo): _71.CodeInfoAmino;
                fromAminoMsg(object: _71.CodeInfoAminoMsg): _71.CodeInfo;
                toAminoMsg(message: _71.CodeInfo): _71.CodeInfoAminoMsg;
                fromProtoMsg(message: _71.CodeInfoProtoMsg): _71.CodeInfo;
                toProto(message: _71.CodeInfo): Uint8Array;
                toProtoMsg(message: _71.CodeInfo): _71.CodeInfoProtoMsg;
            };
            ContractInfo: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _71.ContractInfo;
                isSDK(o: any): o is _71.ContractInfoSDKType;
                isAmino(o: any): o is _71.ContractInfoAmino;
                encode(message: _71.ContractInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.ContractInfo;
                fromPartial(object: Partial<_71.ContractInfo>): _71.ContractInfo;
                fromAmino(object: _71.ContractInfoAmino): _71.ContractInfo;
                toAmino(message: _71.ContractInfo): _71.ContractInfoAmino;
                fromAminoMsg(object: _71.ContractInfoAminoMsg): _71.ContractInfo;
                toAminoMsg(message: _71.ContractInfo): _71.ContractInfoAminoMsg;
                fromProtoMsg(message: _71.ContractInfoProtoMsg): _71.ContractInfo;
                toProto(message: _71.ContractInfo): Uint8Array;
                toProtoMsg(message: _71.ContractInfo): _71.ContractInfoProtoMsg;
            };
            ContractCodeHistoryEntry: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _71.ContractCodeHistoryEntry;
                isSDK(o: any): o is _71.ContractCodeHistoryEntrySDKType;
                isAmino(o: any): o is _71.ContractCodeHistoryEntryAmino;
                encode(message: _71.ContractCodeHistoryEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.ContractCodeHistoryEntry;
                fromPartial(object: Partial<_71.ContractCodeHistoryEntry>): _71.ContractCodeHistoryEntry;
                fromAmino(object: _71.ContractCodeHistoryEntryAmino): _71.ContractCodeHistoryEntry;
                toAmino(message: _71.ContractCodeHistoryEntry): _71.ContractCodeHistoryEntryAmino;
                fromAminoMsg(object: _71.ContractCodeHistoryEntryAminoMsg): _71.ContractCodeHistoryEntry;
                toAminoMsg(message: _71.ContractCodeHistoryEntry): _71.ContractCodeHistoryEntryAminoMsg;
                fromProtoMsg(message: _71.ContractCodeHistoryEntryProtoMsg): _71.ContractCodeHistoryEntry;
                toProto(message: _71.ContractCodeHistoryEntry): Uint8Array;
                toProtoMsg(message: _71.ContractCodeHistoryEntry): _71.ContractCodeHistoryEntryProtoMsg;
            };
            AbsoluteTxPosition: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _71.AbsoluteTxPosition;
                isSDK(o: any): o is _71.AbsoluteTxPositionSDKType;
                isAmino(o: any): o is _71.AbsoluteTxPositionAmino;
                encode(message: _71.AbsoluteTxPosition, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.AbsoluteTxPosition;
                fromPartial(object: Partial<_71.AbsoluteTxPosition>): _71.AbsoluteTxPosition;
                fromAmino(object: _71.AbsoluteTxPositionAmino): _71.AbsoluteTxPosition;
                toAmino(message: _71.AbsoluteTxPosition): _71.AbsoluteTxPositionAmino;
                fromAminoMsg(object: _71.AbsoluteTxPositionAminoMsg): _71.AbsoluteTxPosition;
                toAminoMsg(message: _71.AbsoluteTxPosition): _71.AbsoluteTxPositionAminoMsg;
                fromProtoMsg(message: _71.AbsoluteTxPositionProtoMsg): _71.AbsoluteTxPosition;
                toProto(message: _71.AbsoluteTxPosition): Uint8Array;
                toProtoMsg(message: _71.AbsoluteTxPosition): _71.AbsoluteTxPositionProtoMsg;
            };
            Model: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _71.Model;
                isSDK(o: any): o is _71.ModelSDKType;
                isAmino(o: any): o is _71.ModelAmino;
                encode(message: _71.Model, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.Model;
                fromPartial(object: Partial<_71.Model>): _71.Model;
                fromAmino(object: _71.ModelAmino): _71.Model;
                toAmino(message: _71.Model): _71.ModelAmino;
                fromAminoMsg(object: _71.ModelAminoMsg): _71.Model;
                toAminoMsg(message: _71.Model): _71.ModelAminoMsg;
                fromProtoMsg(message: _71.ModelProtoMsg): _71.Model;
                toProto(message: _71.Model): Uint8Array;
                toProtoMsg(message: _71.Model): _71.ModelProtoMsg;
            };
            MsgStoreCode: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgStoreCode;
                isSDK(o: any): o is _70.MsgStoreCodeSDKType;
                isAmino(o: any): o is _70.MsgStoreCodeAmino;
                encode(message: _70.MsgStoreCode, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgStoreCode;
                fromPartial(object: Partial<_70.MsgStoreCode>): _70.MsgStoreCode;
                fromAmino(object: _70.MsgStoreCodeAmino): _70.MsgStoreCode;
                toAmino(message: _70.MsgStoreCode): _70.MsgStoreCodeAmino;
                fromAminoMsg(object: _70.MsgStoreCodeAminoMsg): _70.MsgStoreCode;
                toAminoMsg(message: _70.MsgStoreCode): _70.MsgStoreCodeAminoMsg;
                fromProtoMsg(message: _70.MsgStoreCodeProtoMsg): _70.MsgStoreCode;
                toProto(message: _70.MsgStoreCode): Uint8Array;
                toProtoMsg(message: _70.MsgStoreCode): _70.MsgStoreCodeProtoMsg;
            };
            MsgStoreCodeResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgStoreCodeResponse;
                isSDK(o: any): o is _70.MsgStoreCodeResponseSDKType;
                isAmino(o: any): o is _70.MsgStoreCodeResponseAmino;
                encode(message: _70.MsgStoreCodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgStoreCodeResponse;
                fromPartial(object: Partial<_70.MsgStoreCodeResponse>): _70.MsgStoreCodeResponse;
                fromAmino(object: _70.MsgStoreCodeResponseAmino): _70.MsgStoreCodeResponse;
                toAmino(message: _70.MsgStoreCodeResponse): _70.MsgStoreCodeResponseAmino;
                fromAminoMsg(object: _70.MsgStoreCodeResponseAminoMsg): _70.MsgStoreCodeResponse;
                toAminoMsg(message: _70.MsgStoreCodeResponse): _70.MsgStoreCodeResponseAminoMsg;
                fromProtoMsg(message: _70.MsgStoreCodeResponseProtoMsg): _70.MsgStoreCodeResponse;
                toProto(message: _70.MsgStoreCodeResponse): Uint8Array;
                toProtoMsg(message: _70.MsgStoreCodeResponse): _70.MsgStoreCodeResponseProtoMsg;
            };
            MsgInstantiateContract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgInstantiateContract;
                isSDK(o: any): o is _70.MsgInstantiateContractSDKType;
                isAmino(o: any): o is _70.MsgInstantiateContractAmino;
                encode(message: _70.MsgInstantiateContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgInstantiateContract;
                fromPartial(object: Partial<_70.MsgInstantiateContract>): _70.MsgInstantiateContract;
                fromAmino(object: _70.MsgInstantiateContractAmino): _70.MsgInstantiateContract;
                toAmino(message: _70.MsgInstantiateContract): _70.MsgInstantiateContractAmino;
                fromAminoMsg(object: _70.MsgInstantiateContractAminoMsg): _70.MsgInstantiateContract;
                toAminoMsg(message: _70.MsgInstantiateContract): _70.MsgInstantiateContractAminoMsg;
                fromProtoMsg(message: _70.MsgInstantiateContractProtoMsg): _70.MsgInstantiateContract;
                toProto(message: _70.MsgInstantiateContract): Uint8Array;
                toProtoMsg(message: _70.MsgInstantiateContract): _70.MsgInstantiateContractProtoMsg;
            };
            MsgInstantiateContract2: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgInstantiateContract2;
                isSDK(o: any): o is _70.MsgInstantiateContract2SDKType;
                isAmino(o: any): o is _70.MsgInstantiateContract2Amino;
                encode(message: _70.MsgInstantiateContract2, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgInstantiateContract2;
                fromPartial(object: Partial<_70.MsgInstantiateContract2>): _70.MsgInstantiateContract2;
                fromAmino(object: _70.MsgInstantiateContract2Amino): _70.MsgInstantiateContract2;
                toAmino(message: _70.MsgInstantiateContract2): _70.MsgInstantiateContract2Amino;
                fromAminoMsg(object: _70.MsgInstantiateContract2AminoMsg): _70.MsgInstantiateContract2;
                toAminoMsg(message: _70.MsgInstantiateContract2): _70.MsgInstantiateContract2AminoMsg;
                fromProtoMsg(message: _70.MsgInstantiateContract2ProtoMsg): _70.MsgInstantiateContract2;
                toProto(message: _70.MsgInstantiateContract2): Uint8Array;
                toProtoMsg(message: _70.MsgInstantiateContract2): _70.MsgInstantiateContract2ProtoMsg;
            };
            MsgInstantiateContractResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgInstantiateContractResponse;
                isSDK(o: any): o is _70.MsgInstantiateContractResponseSDKType;
                isAmino(o: any): o is _70.MsgInstantiateContractResponseAmino;
                encode(message: _70.MsgInstantiateContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgInstantiateContractResponse;
                fromPartial(object: Partial<_70.MsgInstantiateContractResponse>): _70.MsgInstantiateContractResponse;
                fromAmino(object: _70.MsgInstantiateContractResponseAmino): _70.MsgInstantiateContractResponse;
                toAmino(message: _70.MsgInstantiateContractResponse): _70.MsgInstantiateContractResponseAmino;
                fromAminoMsg(object: _70.MsgInstantiateContractResponseAminoMsg): _70.MsgInstantiateContractResponse;
                toAminoMsg(message: _70.MsgInstantiateContractResponse): _70.MsgInstantiateContractResponseAminoMsg;
                fromProtoMsg(message: _70.MsgInstantiateContractResponseProtoMsg): _70.MsgInstantiateContractResponse;
                toProto(message: _70.MsgInstantiateContractResponse): Uint8Array;
                toProtoMsg(message: _70.MsgInstantiateContractResponse): _70.MsgInstantiateContractResponseProtoMsg;
            };
            MsgInstantiateContract2Response: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgInstantiateContract2Response;
                isSDK(o: any): o is _70.MsgInstantiateContract2ResponseSDKType;
                isAmino(o: any): o is _70.MsgInstantiateContract2ResponseAmino;
                encode(message: _70.MsgInstantiateContract2Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgInstantiateContract2Response;
                fromPartial(object: Partial<_70.MsgInstantiateContract2Response>): _70.MsgInstantiateContract2Response;
                fromAmino(object: _70.MsgInstantiateContract2ResponseAmino): _70.MsgInstantiateContract2Response;
                toAmino(message: _70.MsgInstantiateContract2Response): _70.MsgInstantiateContract2ResponseAmino;
                fromAminoMsg(object: _70.MsgInstantiateContract2ResponseAminoMsg): _70.MsgInstantiateContract2Response;
                toAminoMsg(message: _70.MsgInstantiateContract2Response): _70.MsgInstantiateContract2ResponseAminoMsg;
                fromProtoMsg(message: _70.MsgInstantiateContract2ResponseProtoMsg): _70.MsgInstantiateContract2Response;
                toProto(message: _70.MsgInstantiateContract2Response): Uint8Array;
                toProtoMsg(message: _70.MsgInstantiateContract2Response): _70.MsgInstantiateContract2ResponseProtoMsg;
            };
            MsgExecuteContract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgExecuteContract;
                isSDK(o: any): o is _70.MsgExecuteContractSDKType;
                isAmino(o: any): o is _70.MsgExecuteContractAmino;
                encode(message: _70.MsgExecuteContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgExecuteContract;
                fromPartial(object: Partial<_70.MsgExecuteContract>): _70.MsgExecuteContract;
                fromAmino(object: _70.MsgExecuteContractAmino): _70.MsgExecuteContract;
                toAmino(message: _70.MsgExecuteContract): _70.MsgExecuteContractAmino;
                fromAminoMsg(object: _70.MsgExecuteContractAminoMsg): _70.MsgExecuteContract;
                toAminoMsg(message: _70.MsgExecuteContract): _70.MsgExecuteContractAminoMsg;
                fromProtoMsg(message: _70.MsgExecuteContractProtoMsg): _70.MsgExecuteContract;
                toProto(message: _70.MsgExecuteContract): Uint8Array;
                toProtoMsg(message: _70.MsgExecuteContract): _70.MsgExecuteContractProtoMsg;
            };
            MsgExecuteContractResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgExecuteContractResponse;
                isSDK(o: any): o is _70.MsgExecuteContractResponseSDKType;
                isAmino(o: any): o is _70.MsgExecuteContractResponseAmino;
                encode(message: _70.MsgExecuteContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgExecuteContractResponse;
                fromPartial(object: Partial<_70.MsgExecuteContractResponse>): _70.MsgExecuteContractResponse;
                fromAmino(object: _70.MsgExecuteContractResponseAmino): _70.MsgExecuteContractResponse;
                toAmino(message: _70.MsgExecuteContractResponse): _70.MsgExecuteContractResponseAmino;
                fromAminoMsg(object: _70.MsgExecuteContractResponseAminoMsg): _70.MsgExecuteContractResponse;
                toAminoMsg(message: _70.MsgExecuteContractResponse): _70.MsgExecuteContractResponseAminoMsg;
                fromProtoMsg(message: _70.MsgExecuteContractResponseProtoMsg): _70.MsgExecuteContractResponse;
                toProto(message: _70.MsgExecuteContractResponse): Uint8Array;
                toProtoMsg(message: _70.MsgExecuteContractResponse): _70.MsgExecuteContractResponseProtoMsg;
            };
            MsgMigrateContract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgMigrateContract;
                isSDK(o: any): o is _70.MsgMigrateContractSDKType;
                isAmino(o: any): o is _70.MsgMigrateContractAmino;
                encode(message: _70.MsgMigrateContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgMigrateContract;
                fromPartial(object: Partial<_70.MsgMigrateContract>): _70.MsgMigrateContract;
                fromAmino(object: _70.MsgMigrateContractAmino): _70.MsgMigrateContract;
                toAmino(message: _70.MsgMigrateContract): _70.MsgMigrateContractAmino;
                fromAminoMsg(object: _70.MsgMigrateContractAminoMsg): _70.MsgMigrateContract;
                toAminoMsg(message: _70.MsgMigrateContract): _70.MsgMigrateContractAminoMsg;
                fromProtoMsg(message: _70.MsgMigrateContractProtoMsg): _70.MsgMigrateContract;
                toProto(message: _70.MsgMigrateContract): Uint8Array;
                toProtoMsg(message: _70.MsgMigrateContract): _70.MsgMigrateContractProtoMsg;
            };
            MsgMigrateContractResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgMigrateContractResponse;
                isSDK(o: any): o is _70.MsgMigrateContractResponseSDKType;
                isAmino(o: any): o is _70.MsgMigrateContractResponseAmino;
                encode(message: _70.MsgMigrateContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgMigrateContractResponse;
                fromPartial(object: Partial<_70.MsgMigrateContractResponse>): _70.MsgMigrateContractResponse;
                fromAmino(object: _70.MsgMigrateContractResponseAmino): _70.MsgMigrateContractResponse;
                toAmino(message: _70.MsgMigrateContractResponse): _70.MsgMigrateContractResponseAmino;
                fromAminoMsg(object: _70.MsgMigrateContractResponseAminoMsg): _70.MsgMigrateContractResponse;
                toAminoMsg(message: _70.MsgMigrateContractResponse): _70.MsgMigrateContractResponseAminoMsg;
                fromProtoMsg(message: _70.MsgMigrateContractResponseProtoMsg): _70.MsgMigrateContractResponse;
                toProto(message: _70.MsgMigrateContractResponse): Uint8Array;
                toProtoMsg(message: _70.MsgMigrateContractResponse): _70.MsgMigrateContractResponseProtoMsg;
            };
            MsgUpdateAdmin: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgUpdateAdmin;
                isSDK(o: any): o is _70.MsgUpdateAdminSDKType;
                isAmino(o: any): o is _70.MsgUpdateAdminAmino;
                encode(message: _70.MsgUpdateAdmin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgUpdateAdmin;
                fromPartial(object: Partial<_70.MsgUpdateAdmin>): _70.MsgUpdateAdmin;
                fromAmino(object: _70.MsgUpdateAdminAmino): _70.MsgUpdateAdmin;
                toAmino(message: _70.MsgUpdateAdmin): _70.MsgUpdateAdminAmino;
                fromAminoMsg(object: _70.MsgUpdateAdminAminoMsg): _70.MsgUpdateAdmin;
                toAminoMsg(message: _70.MsgUpdateAdmin): _70.MsgUpdateAdminAminoMsg;
                fromProtoMsg(message: _70.MsgUpdateAdminProtoMsg): _70.MsgUpdateAdmin;
                toProto(message: _70.MsgUpdateAdmin): Uint8Array;
                toProtoMsg(message: _70.MsgUpdateAdmin): _70.MsgUpdateAdminProtoMsg;
            };
            MsgUpdateAdminResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgUpdateAdminResponse;
                isSDK(o: any): o is _70.MsgUpdateAdminResponseSDKType;
                isAmino(o: any): o is _70.MsgUpdateAdminResponseAmino;
                encode(_: _70.MsgUpdateAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgUpdateAdminResponse;
                fromPartial(_: Partial<_70.MsgUpdateAdminResponse>): _70.MsgUpdateAdminResponse;
                fromAmino(_: _70.MsgUpdateAdminResponseAmino): _70.MsgUpdateAdminResponse;
                toAmino(_: _70.MsgUpdateAdminResponse): _70.MsgUpdateAdminResponseAmino;
                fromAminoMsg(object: _70.MsgUpdateAdminResponseAminoMsg): _70.MsgUpdateAdminResponse;
                toAminoMsg(message: _70.MsgUpdateAdminResponse): _70.MsgUpdateAdminResponseAminoMsg;
                fromProtoMsg(message: _70.MsgUpdateAdminResponseProtoMsg): _70.MsgUpdateAdminResponse;
                toProto(message: _70.MsgUpdateAdminResponse): Uint8Array;
                toProtoMsg(message: _70.MsgUpdateAdminResponse): _70.MsgUpdateAdminResponseProtoMsg;
            };
            MsgClearAdmin: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgClearAdmin;
                isSDK(o: any): o is _70.MsgClearAdminSDKType;
                isAmino(o: any): o is _70.MsgClearAdminAmino;
                encode(message: _70.MsgClearAdmin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgClearAdmin;
                fromPartial(object: Partial<_70.MsgClearAdmin>): _70.MsgClearAdmin;
                fromAmino(object: _70.MsgClearAdminAmino): _70.MsgClearAdmin;
                toAmino(message: _70.MsgClearAdmin): _70.MsgClearAdminAmino;
                fromAminoMsg(object: _70.MsgClearAdminAminoMsg): _70.MsgClearAdmin;
                toAminoMsg(message: _70.MsgClearAdmin): _70.MsgClearAdminAminoMsg;
                fromProtoMsg(message: _70.MsgClearAdminProtoMsg): _70.MsgClearAdmin;
                toProto(message: _70.MsgClearAdmin): Uint8Array;
                toProtoMsg(message: _70.MsgClearAdmin): _70.MsgClearAdminProtoMsg;
            };
            MsgClearAdminResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _70.MsgClearAdminResponse;
                isSDK(o: any): o is _70.MsgClearAdminResponseSDKType;
                isAmino(o: any): o is _70.MsgClearAdminResponseAmino;
                encode(_: _70.MsgClearAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.MsgClearAdminResponse;
                fromPartial(_: Partial<_70.MsgClearAdminResponse>): _70.MsgClearAdminResponse;
                fromAmino(_: _70.MsgClearAdminResponseAmino): _70.MsgClearAdminResponse;
                toAmino(_: _70.MsgClearAdminResponse): _70.MsgClearAdminResponseAmino;
                fromAminoMsg(object: _70.MsgClearAdminResponseAminoMsg): _70.MsgClearAdminResponse;
                toAminoMsg(message: _70.MsgClearAdminResponse): _70.MsgClearAdminResponseAminoMsg;
                fromProtoMsg(message: _70.MsgClearAdminResponseProtoMsg): _70.MsgClearAdminResponse;
                toProto(message: _70.MsgClearAdminResponse): Uint8Array;
                toProtoMsg(message: _70.MsgClearAdminResponse): _70.MsgClearAdminResponseProtoMsg;
            };
            QueryContractInfoRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryContractInfoRequest;
                isSDK(o: any): o is _69.QueryContractInfoRequestSDKType;
                isAmino(o: any): o is _69.QueryContractInfoRequestAmino;
                encode(message: _69.QueryContractInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryContractInfoRequest;
                fromPartial(object: Partial<_69.QueryContractInfoRequest>): _69.QueryContractInfoRequest;
                fromAmino(object: _69.QueryContractInfoRequestAmino): _69.QueryContractInfoRequest;
                toAmino(message: _69.QueryContractInfoRequest): _69.QueryContractInfoRequestAmino;
                fromAminoMsg(object: _69.QueryContractInfoRequestAminoMsg): _69.QueryContractInfoRequest;
                toAminoMsg(message: _69.QueryContractInfoRequest): _69.QueryContractInfoRequestAminoMsg;
                fromProtoMsg(message: _69.QueryContractInfoRequestProtoMsg): _69.QueryContractInfoRequest;
                toProto(message: _69.QueryContractInfoRequest): Uint8Array;
                toProtoMsg(message: _69.QueryContractInfoRequest): _69.QueryContractInfoRequestProtoMsg;
            };
            QueryContractInfoResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryContractInfoResponse;
                isSDK(o: any): o is _69.QueryContractInfoResponseSDKType;
                isAmino(o: any): o is _69.QueryContractInfoResponseAmino;
                encode(message: _69.QueryContractInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryContractInfoResponse;
                fromPartial(object: Partial<_69.QueryContractInfoResponse>): _69.QueryContractInfoResponse;
                fromAmino(object: _69.QueryContractInfoResponseAmino): _69.QueryContractInfoResponse;
                toAmino(message: _69.QueryContractInfoResponse): _69.QueryContractInfoResponseAmino;
                fromAminoMsg(object: _69.QueryContractInfoResponseAminoMsg): _69.QueryContractInfoResponse;
                toAminoMsg(message: _69.QueryContractInfoResponse): _69.QueryContractInfoResponseAminoMsg;
                fromProtoMsg(message: _69.QueryContractInfoResponseProtoMsg): _69.QueryContractInfoResponse;
                toProto(message: _69.QueryContractInfoResponse): Uint8Array;
                toProtoMsg(message: _69.QueryContractInfoResponse): _69.QueryContractInfoResponseProtoMsg;
            };
            QueryContractHistoryRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryContractHistoryRequest;
                isSDK(o: any): o is _69.QueryContractHistoryRequestSDKType;
                isAmino(o: any): o is _69.QueryContractHistoryRequestAmino;
                encode(message: _69.QueryContractHistoryRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryContractHistoryRequest;
                fromPartial(object: Partial<_69.QueryContractHistoryRequest>): _69.QueryContractHistoryRequest;
                fromAmino(object: _69.QueryContractHistoryRequestAmino): _69.QueryContractHistoryRequest;
                toAmino(message: _69.QueryContractHistoryRequest): _69.QueryContractHistoryRequestAmino;
                fromAminoMsg(object: _69.QueryContractHistoryRequestAminoMsg): _69.QueryContractHistoryRequest;
                toAminoMsg(message: _69.QueryContractHistoryRequest): _69.QueryContractHistoryRequestAminoMsg;
                fromProtoMsg(message: _69.QueryContractHistoryRequestProtoMsg): _69.QueryContractHistoryRequest;
                toProto(message: _69.QueryContractHistoryRequest): Uint8Array;
                toProtoMsg(message: _69.QueryContractHistoryRequest): _69.QueryContractHistoryRequestProtoMsg;
            };
            QueryContractHistoryResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryContractHistoryResponse;
                isSDK(o: any): o is _69.QueryContractHistoryResponseSDKType;
                isAmino(o: any): o is _69.QueryContractHistoryResponseAmino;
                encode(message: _69.QueryContractHistoryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryContractHistoryResponse;
                fromPartial(object: Partial<_69.QueryContractHistoryResponse>): _69.QueryContractHistoryResponse;
                fromAmino(object: _69.QueryContractHistoryResponseAmino): _69.QueryContractHistoryResponse;
                toAmino(message: _69.QueryContractHistoryResponse): _69.QueryContractHistoryResponseAmino;
                fromAminoMsg(object: _69.QueryContractHistoryResponseAminoMsg): _69.QueryContractHistoryResponse;
                toAminoMsg(message: _69.QueryContractHistoryResponse): _69.QueryContractHistoryResponseAminoMsg;
                fromProtoMsg(message: _69.QueryContractHistoryResponseProtoMsg): _69.QueryContractHistoryResponse;
                toProto(message: _69.QueryContractHistoryResponse): Uint8Array;
                toProtoMsg(message: _69.QueryContractHistoryResponse): _69.QueryContractHistoryResponseProtoMsg;
            };
            QueryContractsByCodeRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryContractsByCodeRequest;
                isSDK(o: any): o is _69.QueryContractsByCodeRequestSDKType;
                isAmino(o: any): o is _69.QueryContractsByCodeRequestAmino;
                encode(message: _69.QueryContractsByCodeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryContractsByCodeRequest;
                fromPartial(object: Partial<_69.QueryContractsByCodeRequest>): _69.QueryContractsByCodeRequest;
                fromAmino(object: _69.QueryContractsByCodeRequestAmino): _69.QueryContractsByCodeRequest;
                toAmino(message: _69.QueryContractsByCodeRequest): _69.QueryContractsByCodeRequestAmino;
                fromAminoMsg(object: _69.QueryContractsByCodeRequestAminoMsg): _69.QueryContractsByCodeRequest;
                toAminoMsg(message: _69.QueryContractsByCodeRequest): _69.QueryContractsByCodeRequestAminoMsg;
                fromProtoMsg(message: _69.QueryContractsByCodeRequestProtoMsg): _69.QueryContractsByCodeRequest;
                toProto(message: _69.QueryContractsByCodeRequest): Uint8Array;
                toProtoMsg(message: _69.QueryContractsByCodeRequest): _69.QueryContractsByCodeRequestProtoMsg;
            };
            QueryContractsByCodeResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryContractsByCodeResponse;
                isSDK(o: any): o is _69.QueryContractsByCodeResponseSDKType;
                isAmino(o: any): o is _69.QueryContractsByCodeResponseAmino;
                encode(message: _69.QueryContractsByCodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryContractsByCodeResponse;
                fromPartial(object: Partial<_69.QueryContractsByCodeResponse>): _69.QueryContractsByCodeResponse;
                fromAmino(object: _69.QueryContractsByCodeResponseAmino): _69.QueryContractsByCodeResponse;
                toAmino(message: _69.QueryContractsByCodeResponse): _69.QueryContractsByCodeResponseAmino;
                fromAminoMsg(object: _69.QueryContractsByCodeResponseAminoMsg): _69.QueryContractsByCodeResponse;
                toAminoMsg(message: _69.QueryContractsByCodeResponse): _69.QueryContractsByCodeResponseAminoMsg;
                fromProtoMsg(message: _69.QueryContractsByCodeResponseProtoMsg): _69.QueryContractsByCodeResponse;
                toProto(message: _69.QueryContractsByCodeResponse): Uint8Array;
                toProtoMsg(message: _69.QueryContractsByCodeResponse): _69.QueryContractsByCodeResponseProtoMsg;
            };
            QueryAllContractStateRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryAllContractStateRequest;
                isSDK(o: any): o is _69.QueryAllContractStateRequestSDKType;
                isAmino(o: any): o is _69.QueryAllContractStateRequestAmino;
                encode(message: _69.QueryAllContractStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryAllContractStateRequest;
                fromPartial(object: Partial<_69.QueryAllContractStateRequest>): _69.QueryAllContractStateRequest;
                fromAmino(object: _69.QueryAllContractStateRequestAmino): _69.QueryAllContractStateRequest;
                toAmino(message: _69.QueryAllContractStateRequest): _69.QueryAllContractStateRequestAmino;
                fromAminoMsg(object: _69.QueryAllContractStateRequestAminoMsg): _69.QueryAllContractStateRequest;
                toAminoMsg(message: _69.QueryAllContractStateRequest): _69.QueryAllContractStateRequestAminoMsg;
                fromProtoMsg(message: _69.QueryAllContractStateRequestProtoMsg): _69.QueryAllContractStateRequest;
                toProto(message: _69.QueryAllContractStateRequest): Uint8Array;
                toProtoMsg(message: _69.QueryAllContractStateRequest): _69.QueryAllContractStateRequestProtoMsg;
            };
            QueryAllContractStateResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryAllContractStateResponse;
                isSDK(o: any): o is _69.QueryAllContractStateResponseSDKType;
                isAmino(o: any): o is _69.QueryAllContractStateResponseAmino;
                encode(message: _69.QueryAllContractStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryAllContractStateResponse;
                fromPartial(object: Partial<_69.QueryAllContractStateResponse>): _69.QueryAllContractStateResponse;
                fromAmino(object: _69.QueryAllContractStateResponseAmino): _69.QueryAllContractStateResponse;
                toAmino(message: _69.QueryAllContractStateResponse): _69.QueryAllContractStateResponseAmino;
                fromAminoMsg(object: _69.QueryAllContractStateResponseAminoMsg): _69.QueryAllContractStateResponse;
                toAminoMsg(message: _69.QueryAllContractStateResponse): _69.QueryAllContractStateResponseAminoMsg;
                fromProtoMsg(message: _69.QueryAllContractStateResponseProtoMsg): _69.QueryAllContractStateResponse;
                toProto(message: _69.QueryAllContractStateResponse): Uint8Array;
                toProtoMsg(message: _69.QueryAllContractStateResponse): _69.QueryAllContractStateResponseProtoMsg;
            };
            QueryRawContractStateRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryRawContractStateRequest;
                isSDK(o: any): o is _69.QueryRawContractStateRequestSDKType;
                isAmino(o: any): o is _69.QueryRawContractStateRequestAmino;
                encode(message: _69.QueryRawContractStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryRawContractStateRequest;
                fromPartial(object: Partial<_69.QueryRawContractStateRequest>): _69.QueryRawContractStateRequest;
                fromAmino(object: _69.QueryRawContractStateRequestAmino): _69.QueryRawContractStateRequest;
                toAmino(message: _69.QueryRawContractStateRequest): _69.QueryRawContractStateRequestAmino;
                fromAminoMsg(object: _69.QueryRawContractStateRequestAminoMsg): _69.QueryRawContractStateRequest;
                toAminoMsg(message: _69.QueryRawContractStateRequest): _69.QueryRawContractStateRequestAminoMsg;
                fromProtoMsg(message: _69.QueryRawContractStateRequestProtoMsg): _69.QueryRawContractStateRequest;
                toProto(message: _69.QueryRawContractStateRequest): Uint8Array;
                toProtoMsg(message: _69.QueryRawContractStateRequest): _69.QueryRawContractStateRequestProtoMsg;
            };
            QueryRawContractStateResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryRawContractStateResponse;
                isSDK(o: any): o is _69.QueryRawContractStateResponseSDKType;
                isAmino(o: any): o is _69.QueryRawContractStateResponseAmino;
                encode(message: _69.QueryRawContractStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryRawContractStateResponse;
                fromPartial(object: Partial<_69.QueryRawContractStateResponse>): _69.QueryRawContractStateResponse;
                fromAmino(object: _69.QueryRawContractStateResponseAmino): _69.QueryRawContractStateResponse;
                toAmino(message: _69.QueryRawContractStateResponse): _69.QueryRawContractStateResponseAmino;
                fromAminoMsg(object: _69.QueryRawContractStateResponseAminoMsg): _69.QueryRawContractStateResponse;
                toAminoMsg(message: _69.QueryRawContractStateResponse): _69.QueryRawContractStateResponseAminoMsg;
                fromProtoMsg(message: _69.QueryRawContractStateResponseProtoMsg): _69.QueryRawContractStateResponse;
                toProto(message: _69.QueryRawContractStateResponse): Uint8Array;
                toProtoMsg(message: _69.QueryRawContractStateResponse): _69.QueryRawContractStateResponseProtoMsg;
            };
            QuerySmartContractStateRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QuerySmartContractStateRequest;
                isSDK(o: any): o is _69.QuerySmartContractStateRequestSDKType;
                isAmino(o: any): o is _69.QuerySmartContractStateRequestAmino;
                encode(message: _69.QuerySmartContractStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QuerySmartContractStateRequest;
                fromPartial(object: Partial<_69.QuerySmartContractStateRequest>): _69.QuerySmartContractStateRequest;
                fromAmino(object: _69.QuerySmartContractStateRequestAmino): _69.QuerySmartContractStateRequest;
                toAmino(message: _69.QuerySmartContractStateRequest): _69.QuerySmartContractStateRequestAmino;
                fromAminoMsg(object: _69.QuerySmartContractStateRequestAminoMsg): _69.QuerySmartContractStateRequest;
                toAminoMsg(message: _69.QuerySmartContractStateRequest): _69.QuerySmartContractStateRequestAminoMsg;
                fromProtoMsg(message: _69.QuerySmartContractStateRequestProtoMsg): _69.QuerySmartContractStateRequest;
                toProto(message: _69.QuerySmartContractStateRequest): Uint8Array;
                toProtoMsg(message: _69.QuerySmartContractStateRequest): _69.QuerySmartContractStateRequestProtoMsg;
            };
            QuerySmartContractStateResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QuerySmartContractStateResponse;
                isSDK(o: any): o is _69.QuerySmartContractStateResponseSDKType;
                isAmino(o: any): o is _69.QuerySmartContractStateResponseAmino;
                encode(message: _69.QuerySmartContractStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QuerySmartContractStateResponse;
                fromPartial(object: Partial<_69.QuerySmartContractStateResponse>): _69.QuerySmartContractStateResponse;
                fromAmino(object: _69.QuerySmartContractStateResponseAmino): _69.QuerySmartContractStateResponse;
                toAmino(message: _69.QuerySmartContractStateResponse): _69.QuerySmartContractStateResponseAmino;
                fromAminoMsg(object: _69.QuerySmartContractStateResponseAminoMsg): _69.QuerySmartContractStateResponse;
                toAminoMsg(message: _69.QuerySmartContractStateResponse): _69.QuerySmartContractStateResponseAminoMsg;
                fromProtoMsg(message: _69.QuerySmartContractStateResponseProtoMsg): _69.QuerySmartContractStateResponse;
                toProto(message: _69.QuerySmartContractStateResponse): Uint8Array;
                toProtoMsg(message: _69.QuerySmartContractStateResponse): _69.QuerySmartContractStateResponseProtoMsg;
            };
            QueryCodeRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryCodeRequest;
                isSDK(o: any): o is _69.QueryCodeRequestSDKType;
                isAmino(o: any): o is _69.QueryCodeRequestAmino;
                encode(message: _69.QueryCodeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryCodeRequest;
                fromPartial(object: Partial<_69.QueryCodeRequest>): _69.QueryCodeRequest;
                fromAmino(object: _69.QueryCodeRequestAmino): _69.QueryCodeRequest;
                toAmino(message: _69.QueryCodeRequest): _69.QueryCodeRequestAmino;
                fromAminoMsg(object: _69.QueryCodeRequestAminoMsg): _69.QueryCodeRequest;
                toAminoMsg(message: _69.QueryCodeRequest): _69.QueryCodeRequestAminoMsg;
                fromProtoMsg(message: _69.QueryCodeRequestProtoMsg): _69.QueryCodeRequest;
                toProto(message: _69.QueryCodeRequest): Uint8Array;
                toProtoMsg(message: _69.QueryCodeRequest): _69.QueryCodeRequestProtoMsg;
            };
            CodeInfoResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.CodeInfoResponse;
                isSDK(o: any): o is _69.CodeInfoResponseSDKType;
                isAmino(o: any): o is _69.CodeInfoResponseAmino;
                encode(message: _69.CodeInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.CodeInfoResponse;
                fromPartial(object: Partial<_69.CodeInfoResponse>): _69.CodeInfoResponse;
                fromAmino(object: _69.CodeInfoResponseAmino): _69.CodeInfoResponse;
                toAmino(message: _69.CodeInfoResponse): _69.CodeInfoResponseAmino;
                fromAminoMsg(object: _69.CodeInfoResponseAminoMsg): _69.CodeInfoResponse;
                toAminoMsg(message: _69.CodeInfoResponse): _69.CodeInfoResponseAminoMsg;
                fromProtoMsg(message: _69.CodeInfoResponseProtoMsg): _69.CodeInfoResponse;
                toProto(message: _69.CodeInfoResponse): Uint8Array;
                toProtoMsg(message: _69.CodeInfoResponse): _69.CodeInfoResponseProtoMsg;
            };
            QueryCodeResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryCodeResponse;
                isSDK(o: any): o is _69.QueryCodeResponseSDKType;
                isAmino(o: any): o is _69.QueryCodeResponseAmino;
                encode(message: _69.QueryCodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryCodeResponse;
                fromPartial(object: Partial<_69.QueryCodeResponse>): _69.QueryCodeResponse;
                fromAmino(object: _69.QueryCodeResponseAmino): _69.QueryCodeResponse;
                toAmino(message: _69.QueryCodeResponse): _69.QueryCodeResponseAmino;
                fromAminoMsg(object: _69.QueryCodeResponseAminoMsg): _69.QueryCodeResponse;
                toAminoMsg(message: _69.QueryCodeResponse): _69.QueryCodeResponseAminoMsg;
                fromProtoMsg(message: _69.QueryCodeResponseProtoMsg): _69.QueryCodeResponse;
                toProto(message: _69.QueryCodeResponse): Uint8Array;
                toProtoMsg(message: _69.QueryCodeResponse): _69.QueryCodeResponseProtoMsg;
            };
            QueryCodesRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryCodesRequest;
                isSDK(o: any): o is _69.QueryCodesRequestSDKType;
                isAmino(o: any): o is _69.QueryCodesRequestAmino;
                encode(message: _69.QueryCodesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryCodesRequest;
                fromPartial(object: Partial<_69.QueryCodesRequest>): _69.QueryCodesRequest;
                fromAmino(object: _69.QueryCodesRequestAmino): _69.QueryCodesRequest;
                toAmino(message: _69.QueryCodesRequest): _69.QueryCodesRequestAmino;
                fromAminoMsg(object: _69.QueryCodesRequestAminoMsg): _69.QueryCodesRequest;
                toAminoMsg(message: _69.QueryCodesRequest): _69.QueryCodesRequestAminoMsg;
                fromProtoMsg(message: _69.QueryCodesRequestProtoMsg): _69.QueryCodesRequest;
                toProto(message: _69.QueryCodesRequest): Uint8Array;
                toProtoMsg(message: _69.QueryCodesRequest): _69.QueryCodesRequestProtoMsg;
            };
            QueryCodesResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryCodesResponse;
                isSDK(o: any): o is _69.QueryCodesResponseSDKType;
                isAmino(o: any): o is _69.QueryCodesResponseAmino;
                encode(message: _69.QueryCodesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryCodesResponse;
                fromPartial(object: Partial<_69.QueryCodesResponse>): _69.QueryCodesResponse;
                fromAmino(object: _69.QueryCodesResponseAmino): _69.QueryCodesResponse;
                toAmino(message: _69.QueryCodesResponse): _69.QueryCodesResponseAmino;
                fromAminoMsg(object: _69.QueryCodesResponseAminoMsg): _69.QueryCodesResponse;
                toAminoMsg(message: _69.QueryCodesResponse): _69.QueryCodesResponseAminoMsg;
                fromProtoMsg(message: _69.QueryCodesResponseProtoMsg): _69.QueryCodesResponse;
                toProto(message: _69.QueryCodesResponse): Uint8Array;
                toProtoMsg(message: _69.QueryCodesResponse): _69.QueryCodesResponseProtoMsg;
            };
            QueryPinnedCodesRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryPinnedCodesRequest;
                isSDK(o: any): o is _69.QueryPinnedCodesRequestSDKType;
                isAmino(o: any): o is _69.QueryPinnedCodesRequestAmino;
                encode(message: _69.QueryPinnedCodesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryPinnedCodesRequest;
                fromPartial(object: Partial<_69.QueryPinnedCodesRequest>): _69.QueryPinnedCodesRequest;
                fromAmino(object: _69.QueryPinnedCodesRequestAmino): _69.QueryPinnedCodesRequest;
                toAmino(message: _69.QueryPinnedCodesRequest): _69.QueryPinnedCodesRequestAmino;
                fromAminoMsg(object: _69.QueryPinnedCodesRequestAminoMsg): _69.QueryPinnedCodesRequest;
                toAminoMsg(message: _69.QueryPinnedCodesRequest): _69.QueryPinnedCodesRequestAminoMsg;
                fromProtoMsg(message: _69.QueryPinnedCodesRequestProtoMsg): _69.QueryPinnedCodesRequest;
                toProto(message: _69.QueryPinnedCodesRequest): Uint8Array;
                toProtoMsg(message: _69.QueryPinnedCodesRequest): _69.QueryPinnedCodesRequestProtoMsg;
            };
            QueryPinnedCodesResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryPinnedCodesResponse;
                isSDK(o: any): o is _69.QueryPinnedCodesResponseSDKType;
                isAmino(o: any): o is _69.QueryPinnedCodesResponseAmino;
                encode(message: _69.QueryPinnedCodesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryPinnedCodesResponse;
                fromPartial(object: Partial<_69.QueryPinnedCodesResponse>): _69.QueryPinnedCodesResponse;
                fromAmino(object: _69.QueryPinnedCodesResponseAmino): _69.QueryPinnedCodesResponse;
                toAmino(message: _69.QueryPinnedCodesResponse): _69.QueryPinnedCodesResponseAmino;
                fromAminoMsg(object: _69.QueryPinnedCodesResponseAminoMsg): _69.QueryPinnedCodesResponse;
                toAminoMsg(message: _69.QueryPinnedCodesResponse): _69.QueryPinnedCodesResponseAminoMsg;
                fromProtoMsg(message: _69.QueryPinnedCodesResponseProtoMsg): _69.QueryPinnedCodesResponse;
                toProto(message: _69.QueryPinnedCodesResponse): Uint8Array;
                toProtoMsg(message: _69.QueryPinnedCodesResponse): _69.QueryPinnedCodesResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryParamsRequest;
                isSDK(o: any): o is _69.QueryParamsRequestSDKType;
                isAmino(o: any): o is _69.QueryParamsRequestAmino;
                encode(_: _69.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryParamsRequest;
                fromPartial(_: Partial<_69.QueryParamsRequest>): _69.QueryParamsRequest;
                fromAmino(_: _69.QueryParamsRequestAmino): _69.QueryParamsRequest;
                toAmino(_: _69.QueryParamsRequest): _69.QueryParamsRequestAmino;
                fromAminoMsg(object: _69.QueryParamsRequestAminoMsg): _69.QueryParamsRequest;
                toAminoMsg(message: _69.QueryParamsRequest): _69.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _69.QueryParamsRequestProtoMsg): _69.QueryParamsRequest;
                toProto(message: _69.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _69.QueryParamsRequest): _69.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryParamsResponse;
                isSDK(o: any): o is _69.QueryParamsResponseSDKType;
                isAmino(o: any): o is _69.QueryParamsResponseAmino;
                encode(message: _69.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryParamsResponse;
                fromPartial(object: Partial<_69.QueryParamsResponse>): _69.QueryParamsResponse;
                fromAmino(object: _69.QueryParamsResponseAmino): _69.QueryParamsResponse;
                toAmino(message: _69.QueryParamsResponse): _69.QueryParamsResponseAmino;
                fromAminoMsg(object: _69.QueryParamsResponseAminoMsg): _69.QueryParamsResponse;
                toAminoMsg(message: _69.QueryParamsResponse): _69.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _69.QueryParamsResponseProtoMsg): _69.QueryParamsResponse;
                toProto(message: _69.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _69.QueryParamsResponse): _69.QueryParamsResponseProtoMsg;
            };
            QueryContractsByCreatorRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryContractsByCreatorRequest;
                isSDK(o: any): o is _69.QueryContractsByCreatorRequestSDKType;
                isAmino(o: any): o is _69.QueryContractsByCreatorRequestAmino;
                encode(message: _69.QueryContractsByCreatorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryContractsByCreatorRequest;
                fromPartial(object: Partial<_69.QueryContractsByCreatorRequest>): _69.QueryContractsByCreatorRequest;
                fromAmino(object: _69.QueryContractsByCreatorRequestAmino): _69.QueryContractsByCreatorRequest;
                toAmino(message: _69.QueryContractsByCreatorRequest): _69.QueryContractsByCreatorRequestAmino;
                fromAminoMsg(object: _69.QueryContractsByCreatorRequestAminoMsg): _69.QueryContractsByCreatorRequest;
                toAminoMsg(message: _69.QueryContractsByCreatorRequest): _69.QueryContractsByCreatorRequestAminoMsg;
                fromProtoMsg(message: _69.QueryContractsByCreatorRequestProtoMsg): _69.QueryContractsByCreatorRequest;
                toProto(message: _69.QueryContractsByCreatorRequest): Uint8Array;
                toProtoMsg(message: _69.QueryContractsByCreatorRequest): _69.QueryContractsByCreatorRequestProtoMsg;
            };
            QueryContractsByCreatorResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _69.QueryContractsByCreatorResponse;
                isSDK(o: any): o is _69.QueryContractsByCreatorResponseSDKType;
                isAmino(o: any): o is _69.QueryContractsByCreatorResponseAmino;
                encode(message: _69.QueryContractsByCreatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.QueryContractsByCreatorResponse;
                fromPartial(object: Partial<_69.QueryContractsByCreatorResponse>): _69.QueryContractsByCreatorResponse;
                fromAmino(object: _69.QueryContractsByCreatorResponseAmino): _69.QueryContractsByCreatorResponse;
                toAmino(message: _69.QueryContractsByCreatorResponse): _69.QueryContractsByCreatorResponseAmino;
                fromAminoMsg(object: _69.QueryContractsByCreatorResponseAminoMsg): _69.QueryContractsByCreatorResponse;
                toAminoMsg(message: _69.QueryContractsByCreatorResponse): _69.QueryContractsByCreatorResponseAminoMsg;
                fromProtoMsg(message: _69.QueryContractsByCreatorResponseProtoMsg): _69.QueryContractsByCreatorResponse;
                toProto(message: _69.QueryContractsByCreatorResponse): Uint8Array;
                toProtoMsg(message: _69.QueryContractsByCreatorResponse): _69.QueryContractsByCreatorResponseProtoMsg;
            };
            StoreCodeProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.StoreCodeProposal;
                isSDK(o: any): o is _68.StoreCodeProposalSDKType;
                isAmino(o: any): o is _68.StoreCodeProposalAmino;
                encode(message: _68.StoreCodeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.StoreCodeProposal;
                fromPartial(object: Partial<_68.StoreCodeProposal>): _68.StoreCodeProposal;
                fromAmino(object: _68.StoreCodeProposalAmino): _68.StoreCodeProposal;
                toAmino(message: _68.StoreCodeProposal): _68.StoreCodeProposalAmino;
                fromAminoMsg(object: _68.StoreCodeProposalAminoMsg): _68.StoreCodeProposal;
                toAminoMsg(message: _68.StoreCodeProposal): _68.StoreCodeProposalAminoMsg;
                fromProtoMsg(message: _68.StoreCodeProposalProtoMsg): _68.StoreCodeProposal;
                toProto(message: _68.StoreCodeProposal): Uint8Array;
                toProtoMsg(message: _68.StoreCodeProposal): _68.StoreCodeProposalProtoMsg;
            };
            InstantiateContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.InstantiateContractProposal;
                isSDK(o: any): o is _68.InstantiateContractProposalSDKType;
                isAmino(o: any): o is _68.InstantiateContractProposalAmino;
                encode(message: _68.InstantiateContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.InstantiateContractProposal;
                fromPartial(object: Partial<_68.InstantiateContractProposal>): _68.InstantiateContractProposal;
                fromAmino(object: _68.InstantiateContractProposalAmino): _68.InstantiateContractProposal;
                toAmino(message: _68.InstantiateContractProposal): _68.InstantiateContractProposalAmino;
                fromAminoMsg(object: _68.InstantiateContractProposalAminoMsg): _68.InstantiateContractProposal;
                toAminoMsg(message: _68.InstantiateContractProposal): _68.InstantiateContractProposalAminoMsg;
                fromProtoMsg(message: _68.InstantiateContractProposalProtoMsg): _68.InstantiateContractProposal;
                toProto(message: _68.InstantiateContractProposal): Uint8Array;
                toProtoMsg(message: _68.InstantiateContractProposal): _68.InstantiateContractProposalProtoMsg;
            };
            InstantiateContract2Proposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.InstantiateContract2Proposal;
                isSDK(o: any): o is _68.InstantiateContract2ProposalSDKType;
                isAmino(o: any): o is _68.InstantiateContract2ProposalAmino;
                encode(message: _68.InstantiateContract2Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.InstantiateContract2Proposal;
                fromPartial(object: Partial<_68.InstantiateContract2Proposal>): _68.InstantiateContract2Proposal;
                fromAmino(object: _68.InstantiateContract2ProposalAmino): _68.InstantiateContract2Proposal;
                toAmino(message: _68.InstantiateContract2Proposal): _68.InstantiateContract2ProposalAmino;
                fromAminoMsg(object: _68.InstantiateContract2ProposalAminoMsg): _68.InstantiateContract2Proposal;
                toAminoMsg(message: _68.InstantiateContract2Proposal): _68.InstantiateContract2ProposalAminoMsg;
                fromProtoMsg(message: _68.InstantiateContract2ProposalProtoMsg): _68.InstantiateContract2Proposal;
                toProto(message: _68.InstantiateContract2Proposal): Uint8Array;
                toProtoMsg(message: _68.InstantiateContract2Proposal): _68.InstantiateContract2ProposalProtoMsg;
            };
            MigrateContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.MigrateContractProposal;
                isSDK(o: any): o is _68.MigrateContractProposalSDKType;
                isAmino(o: any): o is _68.MigrateContractProposalAmino;
                encode(message: _68.MigrateContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.MigrateContractProposal;
                fromPartial(object: Partial<_68.MigrateContractProposal>): _68.MigrateContractProposal;
                fromAmino(object: _68.MigrateContractProposalAmino): _68.MigrateContractProposal;
                toAmino(message: _68.MigrateContractProposal): _68.MigrateContractProposalAmino;
                fromAminoMsg(object: _68.MigrateContractProposalAminoMsg): _68.MigrateContractProposal;
                toAminoMsg(message: _68.MigrateContractProposal): _68.MigrateContractProposalAminoMsg;
                fromProtoMsg(message: _68.MigrateContractProposalProtoMsg): _68.MigrateContractProposal;
                toProto(message: _68.MigrateContractProposal): Uint8Array;
                toProtoMsg(message: _68.MigrateContractProposal): _68.MigrateContractProposalProtoMsg;
            };
            SudoContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.SudoContractProposal;
                isSDK(o: any): o is _68.SudoContractProposalSDKType;
                isAmino(o: any): o is _68.SudoContractProposalAmino;
                encode(message: _68.SudoContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.SudoContractProposal;
                fromPartial(object: Partial<_68.SudoContractProposal>): _68.SudoContractProposal;
                fromAmino(object: _68.SudoContractProposalAmino): _68.SudoContractProposal;
                toAmino(message: _68.SudoContractProposal): _68.SudoContractProposalAmino;
                fromAminoMsg(object: _68.SudoContractProposalAminoMsg): _68.SudoContractProposal;
                toAminoMsg(message: _68.SudoContractProposal): _68.SudoContractProposalAminoMsg;
                fromProtoMsg(message: _68.SudoContractProposalProtoMsg): _68.SudoContractProposal;
                toProto(message: _68.SudoContractProposal): Uint8Array;
                toProtoMsg(message: _68.SudoContractProposal): _68.SudoContractProposalProtoMsg;
            };
            ExecuteContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.ExecuteContractProposal;
                isSDK(o: any): o is _68.ExecuteContractProposalSDKType;
                isAmino(o: any): o is _68.ExecuteContractProposalAmino;
                encode(message: _68.ExecuteContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.ExecuteContractProposal;
                fromPartial(object: Partial<_68.ExecuteContractProposal>): _68.ExecuteContractProposal;
                fromAmino(object: _68.ExecuteContractProposalAmino): _68.ExecuteContractProposal;
                toAmino(message: _68.ExecuteContractProposal): _68.ExecuteContractProposalAmino;
                fromAminoMsg(object: _68.ExecuteContractProposalAminoMsg): _68.ExecuteContractProposal;
                toAminoMsg(message: _68.ExecuteContractProposal): _68.ExecuteContractProposalAminoMsg;
                fromProtoMsg(message: _68.ExecuteContractProposalProtoMsg): _68.ExecuteContractProposal;
                toProto(message: _68.ExecuteContractProposal): Uint8Array;
                toProtoMsg(message: _68.ExecuteContractProposal): _68.ExecuteContractProposalProtoMsg;
            };
            UpdateAdminProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.UpdateAdminProposal;
                isSDK(o: any): o is _68.UpdateAdminProposalSDKType;
                isAmino(o: any): o is _68.UpdateAdminProposalAmino;
                encode(message: _68.UpdateAdminProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.UpdateAdminProposal;
                fromPartial(object: Partial<_68.UpdateAdminProposal>): _68.UpdateAdminProposal;
                fromAmino(object: _68.UpdateAdminProposalAmino): _68.UpdateAdminProposal;
                toAmino(message: _68.UpdateAdminProposal): _68.UpdateAdminProposalAmino;
                fromAminoMsg(object: _68.UpdateAdminProposalAminoMsg): _68.UpdateAdminProposal;
                toAminoMsg(message: _68.UpdateAdminProposal): _68.UpdateAdminProposalAminoMsg;
                fromProtoMsg(message: _68.UpdateAdminProposalProtoMsg): _68.UpdateAdminProposal;
                toProto(message: _68.UpdateAdminProposal): Uint8Array;
                toProtoMsg(message: _68.UpdateAdminProposal): _68.UpdateAdminProposalProtoMsg;
            };
            ClearAdminProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.ClearAdminProposal;
                isSDK(o: any): o is _68.ClearAdminProposalSDKType;
                isAmino(o: any): o is _68.ClearAdminProposalAmino;
                encode(message: _68.ClearAdminProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.ClearAdminProposal;
                fromPartial(object: Partial<_68.ClearAdminProposal>): _68.ClearAdminProposal;
                fromAmino(object: _68.ClearAdminProposalAmino): _68.ClearAdminProposal;
                toAmino(message: _68.ClearAdminProposal): _68.ClearAdminProposalAmino;
                fromAminoMsg(object: _68.ClearAdminProposalAminoMsg): _68.ClearAdminProposal;
                toAminoMsg(message: _68.ClearAdminProposal): _68.ClearAdminProposalAminoMsg;
                fromProtoMsg(message: _68.ClearAdminProposalProtoMsg): _68.ClearAdminProposal;
                toProto(message: _68.ClearAdminProposal): Uint8Array;
                toProtoMsg(message: _68.ClearAdminProposal): _68.ClearAdminProposalProtoMsg;
            };
            PinCodesProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.PinCodesProposal;
                isSDK(o: any): o is _68.PinCodesProposalSDKType;
                isAmino(o: any): o is _68.PinCodesProposalAmino;
                encode(message: _68.PinCodesProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.PinCodesProposal;
                fromPartial(object: Partial<_68.PinCodesProposal>): _68.PinCodesProposal;
                fromAmino(object: _68.PinCodesProposalAmino): _68.PinCodesProposal;
                toAmino(message: _68.PinCodesProposal): _68.PinCodesProposalAmino;
                fromAminoMsg(object: _68.PinCodesProposalAminoMsg): _68.PinCodesProposal;
                toAminoMsg(message: _68.PinCodesProposal): _68.PinCodesProposalAminoMsg;
                fromProtoMsg(message: _68.PinCodesProposalProtoMsg): _68.PinCodesProposal;
                toProto(message: _68.PinCodesProposal): Uint8Array;
                toProtoMsg(message: _68.PinCodesProposal): _68.PinCodesProposalProtoMsg;
            };
            UnpinCodesProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.UnpinCodesProposal;
                isSDK(o: any): o is _68.UnpinCodesProposalSDKType;
                isAmino(o: any): o is _68.UnpinCodesProposalAmino;
                encode(message: _68.UnpinCodesProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.UnpinCodesProposal;
                fromPartial(object: Partial<_68.UnpinCodesProposal>): _68.UnpinCodesProposal;
                fromAmino(object: _68.UnpinCodesProposalAmino): _68.UnpinCodesProposal;
                toAmino(message: _68.UnpinCodesProposal): _68.UnpinCodesProposalAmino;
                fromAminoMsg(object: _68.UnpinCodesProposalAminoMsg): _68.UnpinCodesProposal;
                toAminoMsg(message: _68.UnpinCodesProposal): _68.UnpinCodesProposalAminoMsg;
                fromProtoMsg(message: _68.UnpinCodesProposalProtoMsg): _68.UnpinCodesProposal;
                toProto(message: _68.UnpinCodesProposal): Uint8Array;
                toProtoMsg(message: _68.UnpinCodesProposal): _68.UnpinCodesProposalProtoMsg;
            };
            AccessConfigUpdate: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.AccessConfigUpdate;
                isSDK(o: any): o is _68.AccessConfigUpdateSDKType;
                isAmino(o: any): o is _68.AccessConfigUpdateAmino;
                encode(message: _68.AccessConfigUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.AccessConfigUpdate;
                fromPartial(object: Partial<_68.AccessConfigUpdate>): _68.AccessConfigUpdate;
                fromAmino(object: _68.AccessConfigUpdateAmino): _68.AccessConfigUpdate;
                toAmino(message: _68.AccessConfigUpdate): _68.AccessConfigUpdateAmino;
                fromAminoMsg(object: _68.AccessConfigUpdateAminoMsg): _68.AccessConfigUpdate;
                toAminoMsg(message: _68.AccessConfigUpdate): _68.AccessConfigUpdateAminoMsg;
                fromProtoMsg(message: _68.AccessConfigUpdateProtoMsg): _68.AccessConfigUpdate;
                toProto(message: _68.AccessConfigUpdate): Uint8Array;
                toProtoMsg(message: _68.AccessConfigUpdate): _68.AccessConfigUpdateProtoMsg;
            };
            UpdateInstantiateConfigProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.UpdateInstantiateConfigProposal;
                isSDK(o: any): o is _68.UpdateInstantiateConfigProposalSDKType;
                isAmino(o: any): o is _68.UpdateInstantiateConfigProposalAmino;
                encode(message: _68.UpdateInstantiateConfigProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.UpdateInstantiateConfigProposal;
                fromPartial(object: Partial<_68.UpdateInstantiateConfigProposal>): _68.UpdateInstantiateConfigProposal;
                fromAmino(object: _68.UpdateInstantiateConfigProposalAmino): _68.UpdateInstantiateConfigProposal;
                toAmino(message: _68.UpdateInstantiateConfigProposal): _68.UpdateInstantiateConfigProposalAmino;
                fromAminoMsg(object: _68.UpdateInstantiateConfigProposalAminoMsg): _68.UpdateInstantiateConfigProposal;
                toAminoMsg(message: _68.UpdateInstantiateConfigProposal): _68.UpdateInstantiateConfigProposalAminoMsg;
                fromProtoMsg(message: _68.UpdateInstantiateConfigProposalProtoMsg): _68.UpdateInstantiateConfigProposal;
                toProto(message: _68.UpdateInstantiateConfigProposal): Uint8Array;
                toProtoMsg(message: _68.UpdateInstantiateConfigProposal): _68.UpdateInstantiateConfigProposalProtoMsg;
            };
            StoreAndInstantiateContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _68.StoreAndInstantiateContractProposal;
                isSDK(o: any): o is _68.StoreAndInstantiateContractProposalSDKType;
                isAmino(o: any): o is _68.StoreAndInstantiateContractProposalAmino;
                encode(message: _68.StoreAndInstantiateContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.StoreAndInstantiateContractProposal;
                fromPartial(object: Partial<_68.StoreAndInstantiateContractProposal>): _68.StoreAndInstantiateContractProposal;
                fromAmino(object: _68.StoreAndInstantiateContractProposalAmino): _68.StoreAndInstantiateContractProposal;
                toAmino(message: _68.StoreAndInstantiateContractProposal): _68.StoreAndInstantiateContractProposalAmino;
                fromAminoMsg(object: _68.StoreAndInstantiateContractProposalAminoMsg): _68.StoreAndInstantiateContractProposal;
                toAminoMsg(message: _68.StoreAndInstantiateContractProposal): _68.StoreAndInstantiateContractProposalAminoMsg;
                fromProtoMsg(message: _68.StoreAndInstantiateContractProposalProtoMsg): _68.StoreAndInstantiateContractProposal;
                toProto(message: _68.StoreAndInstantiateContractProposal): Uint8Array;
                toProtoMsg(message: _68.StoreAndInstantiateContractProposal): _68.StoreAndInstantiateContractProposalProtoMsg;
            };
            MsgIBCSend: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _67.MsgIBCSend;
                isSDK(o: any): o is _67.MsgIBCSendSDKType;
                isAmino(o: any): o is _67.MsgIBCSendAmino;
                encode(message: _67.MsgIBCSend, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.MsgIBCSend;
                fromPartial(object: Partial<_67.MsgIBCSend>): _67.MsgIBCSend;
                fromAmino(object: _67.MsgIBCSendAmino): _67.MsgIBCSend;
                toAmino(message: _67.MsgIBCSend): _67.MsgIBCSendAmino;
                fromAminoMsg(object: _67.MsgIBCSendAminoMsg): _67.MsgIBCSend;
                toAminoMsg(message: _67.MsgIBCSend): _67.MsgIBCSendAminoMsg;
                fromProtoMsg(message: _67.MsgIBCSendProtoMsg): _67.MsgIBCSend;
                toProto(message: _67.MsgIBCSend): Uint8Array;
                toProtoMsg(message: _67.MsgIBCSend): _67.MsgIBCSendProtoMsg;
            };
            MsgIBCCloseChannel: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _67.MsgIBCCloseChannel;
                isSDK(o: any): o is _67.MsgIBCCloseChannelSDKType;
                isAmino(o: any): o is _67.MsgIBCCloseChannelAmino;
                encode(message: _67.MsgIBCCloseChannel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.MsgIBCCloseChannel;
                fromPartial(object: Partial<_67.MsgIBCCloseChannel>): _67.MsgIBCCloseChannel;
                fromAmino(object: _67.MsgIBCCloseChannelAmino): _67.MsgIBCCloseChannel;
                toAmino(message: _67.MsgIBCCloseChannel): _67.MsgIBCCloseChannelAmino;
                fromAminoMsg(object: _67.MsgIBCCloseChannelAminoMsg): _67.MsgIBCCloseChannel;
                toAminoMsg(message: _67.MsgIBCCloseChannel): _67.MsgIBCCloseChannelAminoMsg;
                fromProtoMsg(message: _67.MsgIBCCloseChannelProtoMsg): _67.MsgIBCCloseChannel;
                toProto(message: _67.MsgIBCCloseChannel): Uint8Array;
                toProtoMsg(message: _67.MsgIBCCloseChannel): _67.MsgIBCCloseChannelProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _66.GenesisState;
                isSDK(o: any): o is _66.GenesisStateSDKType;
                isAmino(o: any): o is _66.GenesisStateAmino;
                encode(message: _66.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.GenesisState;
                fromPartial(object: Partial<_66.GenesisState>): _66.GenesisState;
                fromAmino(object: _66.GenesisStateAmino): _66.GenesisState;
                toAmino(message: _66.GenesisState): _66.GenesisStateAmino;
                fromAminoMsg(object: _66.GenesisStateAminoMsg): _66.GenesisState;
                toAminoMsg(message: _66.GenesisState): _66.GenesisStateAminoMsg;
                fromProtoMsg(message: _66.GenesisStateProtoMsg): _66.GenesisState;
                toProto(message: _66.GenesisState): Uint8Array;
                toProtoMsg(message: _66.GenesisState): _66.GenesisStateProtoMsg;
            };
            Code: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _66.Code;
                isSDK(o: any): o is _66.CodeSDKType;
                isAmino(o: any): o is _66.CodeAmino;
                encode(message: _66.Code, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.Code;
                fromPartial(object: Partial<_66.Code>): _66.Code;
                fromAmino(object: _66.CodeAmino): _66.Code;
                toAmino(message: _66.Code): _66.CodeAmino;
                fromAminoMsg(object: _66.CodeAminoMsg): _66.Code;
                toAminoMsg(message: _66.Code): _66.CodeAminoMsg;
                fromProtoMsg(message: _66.CodeProtoMsg): _66.Code;
                toProto(message: _66.Code): Uint8Array;
                toProtoMsg(message: _66.Code): _66.CodeProtoMsg;
            };
            Contract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _66.Contract;
                isSDK(o: any): o is _66.ContractSDKType;
                isAmino(o: any): o is _66.ContractAmino;
                encode(message: _66.Contract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.Contract;
                fromPartial(object: Partial<_66.Contract>): _66.Contract;
                fromAmino(object: _66.ContractAmino): _66.Contract;
                toAmino(message: _66.Contract): _66.ContractAmino;
                fromAminoMsg(object: _66.ContractAminoMsg): _66.Contract;
                toAminoMsg(message: _66.Contract): _66.ContractAminoMsg;
                fromProtoMsg(message: _66.ContractProtoMsg): _66.Contract;
                toProto(message: _66.Contract): Uint8Array;
                toProtoMsg(message: _66.Contract): _66.ContractProtoMsg;
            };
            Sequence: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _66.Sequence;
                isSDK(o: any): o is _66.SequenceSDKType;
                isAmino(o: any): o is _66.SequenceAmino;
                encode(message: _66.Sequence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.Sequence;
                fromPartial(object: Partial<_66.Sequence>): _66.Sequence;
                fromAmino(object: _66.SequenceAmino): _66.Sequence;
                toAmino(message: _66.Sequence): _66.SequenceAmino;
                fromAminoMsg(object: _66.SequenceAminoMsg): _66.Sequence;
                toAminoMsg(message: _66.Sequence): _66.SequenceAminoMsg;
                fromProtoMsg(message: _66.SequenceProtoMsg): _66.Sequence;
                toProto(message: _66.Sequence): Uint8Array;
                toProtoMsg(message: _66.Sequence): _66.SequenceProtoMsg;
            };
            ContractExecutionAuthorization: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _65.ContractExecutionAuthorization;
                isSDK(o: any): o is _65.ContractExecutionAuthorizationSDKType;
                isAmino(o: any): o is _65.ContractExecutionAuthorizationAmino;
                encode(message: _65.ContractExecutionAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.ContractExecutionAuthorization;
                fromPartial(object: Partial<_65.ContractExecutionAuthorization>): _65.ContractExecutionAuthorization;
                fromAmino(object: _65.ContractExecutionAuthorizationAmino): _65.ContractExecutionAuthorization;
                toAmino(message: _65.ContractExecutionAuthorization): _65.ContractExecutionAuthorizationAmino;
                fromAminoMsg(object: _65.ContractExecutionAuthorizationAminoMsg): _65.ContractExecutionAuthorization;
                toAminoMsg(message: _65.ContractExecutionAuthorization): _65.ContractExecutionAuthorizationAminoMsg;
                fromProtoMsg(message: _65.ContractExecutionAuthorizationProtoMsg): _65.ContractExecutionAuthorization;
                toProto(message: _65.ContractExecutionAuthorization): Uint8Array;
                toProtoMsg(message: _65.ContractExecutionAuthorization): _65.ContractExecutionAuthorizationProtoMsg;
            };
            ContractMigrationAuthorization: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _65.ContractMigrationAuthorization;
                isSDK(o: any): o is _65.ContractMigrationAuthorizationSDKType;
                isAmino(o: any): o is _65.ContractMigrationAuthorizationAmino;
                encode(message: _65.ContractMigrationAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.ContractMigrationAuthorization;
                fromPartial(object: Partial<_65.ContractMigrationAuthorization>): _65.ContractMigrationAuthorization;
                fromAmino(object: _65.ContractMigrationAuthorizationAmino): _65.ContractMigrationAuthorization;
                toAmino(message: _65.ContractMigrationAuthorization): _65.ContractMigrationAuthorizationAmino;
                fromAminoMsg(object: _65.ContractMigrationAuthorizationAminoMsg): _65.ContractMigrationAuthorization;
                toAminoMsg(message: _65.ContractMigrationAuthorization): _65.ContractMigrationAuthorizationAminoMsg;
                fromProtoMsg(message: _65.ContractMigrationAuthorizationProtoMsg): _65.ContractMigrationAuthorization;
                toProto(message: _65.ContractMigrationAuthorization): Uint8Array;
                toProtoMsg(message: _65.ContractMigrationAuthorization): _65.ContractMigrationAuthorizationProtoMsg;
            };
            ContractGrant: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _65.ContractGrant;
                isSDK(o: any): o is _65.ContractGrantSDKType;
                isAmino(o: any): o is _65.ContractGrantAmino;
                encode(message: _65.ContractGrant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.ContractGrant;
                fromPartial(object: Partial<_65.ContractGrant>): _65.ContractGrant;
                fromAmino(object: _65.ContractGrantAmino): _65.ContractGrant;
                toAmino(message: _65.ContractGrant): _65.ContractGrantAmino;
                fromAminoMsg(object: _65.ContractGrantAminoMsg): _65.ContractGrant;
                toAminoMsg(message: _65.ContractGrant): _65.ContractGrantAminoMsg;
                fromProtoMsg(message: _65.ContractGrantProtoMsg): _65.ContractGrant;
                toProto(message: _65.ContractGrant): Uint8Array;
                toProtoMsg(message: _65.ContractGrant): _65.ContractGrantProtoMsg;
            };
            MaxCallsLimit: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _65.MaxCallsLimit;
                isSDK(o: any): o is _65.MaxCallsLimitSDKType;
                isAmino(o: any): o is _65.MaxCallsLimitAmino;
                encode(message: _65.MaxCallsLimit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.MaxCallsLimit;
                fromPartial(object: Partial<_65.MaxCallsLimit>): _65.MaxCallsLimit;
                fromAmino(object: _65.MaxCallsLimitAmino): _65.MaxCallsLimit;
                toAmino(message: _65.MaxCallsLimit): _65.MaxCallsLimitAmino;
                fromAminoMsg(object: _65.MaxCallsLimitAminoMsg): _65.MaxCallsLimit;
                toAminoMsg(message: _65.MaxCallsLimit): _65.MaxCallsLimitAminoMsg;
                fromProtoMsg(message: _65.MaxCallsLimitProtoMsg): _65.MaxCallsLimit;
                toProto(message: _65.MaxCallsLimit): Uint8Array;
                toProtoMsg(message: _65.MaxCallsLimit): _65.MaxCallsLimitProtoMsg;
            };
            MaxFundsLimit: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _65.MaxFundsLimit;
                isSDK(o: any): o is _65.MaxFundsLimitSDKType;
                isAmino(o: any): o is _65.MaxFundsLimitAmino;
                encode(message: _65.MaxFundsLimit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.MaxFundsLimit;
                fromPartial(object: Partial<_65.MaxFundsLimit>): _65.MaxFundsLimit;
                fromAmino(object: _65.MaxFundsLimitAmino): _65.MaxFundsLimit;
                toAmino(message: _65.MaxFundsLimit): _65.MaxFundsLimitAmino;
                fromAminoMsg(object: _65.MaxFundsLimitAminoMsg): _65.MaxFundsLimit;
                toAminoMsg(message: _65.MaxFundsLimit): _65.MaxFundsLimitAminoMsg;
                fromProtoMsg(message: _65.MaxFundsLimitProtoMsg): _65.MaxFundsLimit;
                toProto(message: _65.MaxFundsLimit): Uint8Array;
                toProtoMsg(message: _65.MaxFundsLimit): _65.MaxFundsLimitProtoMsg;
            };
            CombinedLimit: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _65.CombinedLimit;
                isSDK(o: any): o is _65.CombinedLimitSDKType;
                isAmino(o: any): o is _65.CombinedLimitAmino;
                encode(message: _65.CombinedLimit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.CombinedLimit;
                fromPartial(object: Partial<_65.CombinedLimit>): _65.CombinedLimit;
                fromAmino(object: _65.CombinedLimitAmino): _65.CombinedLimit;
                toAmino(message: _65.CombinedLimit): _65.CombinedLimitAmino;
                fromAminoMsg(object: _65.CombinedLimitAminoMsg): _65.CombinedLimit;
                toAminoMsg(message: _65.CombinedLimit): _65.CombinedLimitAminoMsg;
                fromProtoMsg(message: _65.CombinedLimitProtoMsg): _65.CombinedLimit;
                toProto(message: _65.CombinedLimit): Uint8Array;
                toProtoMsg(message: _65.CombinedLimit): _65.CombinedLimitProtoMsg;
            };
            AllowAllMessagesFilter: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _65.AllowAllMessagesFilter;
                isSDK(o: any): o is _65.AllowAllMessagesFilterSDKType;
                isAmino(o: any): o is _65.AllowAllMessagesFilterAmino;
                encode(_: _65.AllowAllMessagesFilter, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.AllowAllMessagesFilter;
                fromPartial(_: Partial<_65.AllowAllMessagesFilter>): _65.AllowAllMessagesFilter;
                fromAmino(_: _65.AllowAllMessagesFilterAmino): _65.AllowAllMessagesFilter;
                toAmino(_: _65.AllowAllMessagesFilter): _65.AllowAllMessagesFilterAmino;
                fromAminoMsg(object: _65.AllowAllMessagesFilterAminoMsg): _65.AllowAllMessagesFilter;
                toAminoMsg(message: _65.AllowAllMessagesFilter): _65.AllowAllMessagesFilterAminoMsg;
                fromProtoMsg(message: _65.AllowAllMessagesFilterProtoMsg): _65.AllowAllMessagesFilter;
                toProto(message: _65.AllowAllMessagesFilter): Uint8Array;
                toProtoMsg(message: _65.AllowAllMessagesFilter): _65.AllowAllMessagesFilterProtoMsg;
            };
            AcceptedMessageKeysFilter: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _65.AcceptedMessageKeysFilter;
                isSDK(o: any): o is _65.AcceptedMessageKeysFilterSDKType;
                isAmino(o: any): o is _65.AcceptedMessageKeysFilterAmino;
                encode(message: _65.AcceptedMessageKeysFilter, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.AcceptedMessageKeysFilter;
                fromPartial(object: Partial<_65.AcceptedMessageKeysFilter>): _65.AcceptedMessageKeysFilter;
                fromAmino(object: _65.AcceptedMessageKeysFilterAmino): _65.AcceptedMessageKeysFilter;
                toAmino(message: _65.AcceptedMessageKeysFilter): _65.AcceptedMessageKeysFilterAmino;
                fromAminoMsg(object: _65.AcceptedMessageKeysFilterAminoMsg): _65.AcceptedMessageKeysFilter;
                toAminoMsg(message: _65.AcceptedMessageKeysFilter): _65.AcceptedMessageKeysFilterAminoMsg;
                fromProtoMsg(message: _65.AcceptedMessageKeysFilterProtoMsg): _65.AcceptedMessageKeysFilter;
                toProto(message: _65.AcceptedMessageKeysFilter): Uint8Array;
                toProtoMsg(message: _65.AcceptedMessageKeysFilter): _65.AcceptedMessageKeysFilterProtoMsg;
            };
            AcceptedMessagesFilter: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _65.AcceptedMessagesFilter;
                isSDK(o: any): o is _65.AcceptedMessagesFilterSDKType;
                isAmino(o: any): o is _65.AcceptedMessagesFilterAmino;
                encode(message: _65.AcceptedMessagesFilter, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.AcceptedMessagesFilter;
                fromPartial(object: Partial<_65.AcceptedMessagesFilter>): _65.AcceptedMessagesFilter;
                fromAmino(object: _65.AcceptedMessagesFilterAmino): _65.AcceptedMessagesFilter;
                toAmino(message: _65.AcceptedMessagesFilter): _65.AcceptedMessagesFilterAmino;
                fromAminoMsg(object: _65.AcceptedMessagesFilterAminoMsg): _65.AcceptedMessagesFilter;
                toAminoMsg(message: _65.AcceptedMessagesFilter): _65.AcceptedMessagesFilterAminoMsg;
                fromProtoMsg(message: _65.AcceptedMessagesFilterProtoMsg): _65.AcceptedMessagesFilter;
                toProto(message: _65.AcceptedMessagesFilter): Uint8Array;
                toProtoMsg(message: _65.AcceptedMessagesFilter): _65.AcceptedMessagesFilterProtoMsg;
            };
        };
    }
    const ClientFactory: {
        createRPCMsgClient: ({ rpc }: {
            rpc: import("../helpers").Rpc;
        }) => Promise<{
            cosmos: {
                authz: {
                    v1beta1: import("../cosmos/authz/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                bank: {
                    v1beta1: import("../cosmos/bank/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                distribution: {
                    v1beta1: import("../cosmos/distribution/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                feegrant: {
                    v1beta1: import("../cosmos/feegrant/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                gov: {
                    v1: import("../cosmos/gov/v1/tx.rpc.msg").MsgClientImpl;
                    v1beta1: import("../cosmos/gov/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                group: {
                    v1: import("../cosmos/group/v1/tx.rpc.msg").MsgClientImpl;
                };
                staking: {
                    v1beta1: import("../cosmos/staking/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                upgrade: {
                    v1beta1: import("../cosmos/upgrade/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                vesting: {
                    v1beta1: import("../cosmos/vesting/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
            };
            cosmwasm: {
                wasm: {
                    v1: _175.MsgClientImpl;
                };
            };
        }>;
        createRPCQueryClient: ({ rpcEndpoint }: {
            rpcEndpoint: string | import("@cosmjs/tendermint-rpc").HttpEndpoint;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: {
                        accounts(request?: import("../cosmos/auth/v1beta1/query").QueryAccountsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountsResponse>;
                        account(request: import("../cosmos/auth/v1beta1/query").QueryAccountRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountResponse>;
                        params(request?: import("../cosmos/auth/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryParamsResponse>;
                        moduleAccounts(request?: import("../cosmos/auth/v1beta1/query").QueryModuleAccountsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryModuleAccountsResponse>;
                        bech32Prefix(request?: import("../cosmos/auth/v1beta1/query").Bech32PrefixRequest): Promise<import("../cosmos/auth/v1beta1/query").Bech32PrefixResponse>;
                        addressBytesToString(request: import("../cosmos/auth/v1beta1/query").AddressBytesToStringRequest): Promise<import("../cosmos/auth/v1beta1/query").AddressBytesToStringResponse>;
                        addressStringToBytes(request: import("../cosmos/auth/v1beta1/query").AddressStringToBytesRequest): Promise<import("../cosmos/auth/v1beta1/query").AddressStringToBytesResponse>;
                    };
                };
                authz: {
                    v1beta1: {
                        grants(request: import("../cosmos/authz/v1beta1/query").QueryGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGrantsResponse>;
                        granterGrants(request: import("../cosmos/authz/v1beta1/query").QueryGranterGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGranterGrantsResponse>;
                        granteeGrants(request: import("../cosmos/authz/v1beta1/query").QueryGranteeGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGranteeGrantsResponse>;
                    };
                };
                bank: {
                    v1beta1: {
                        balance(request: import("../cosmos/bank/v1beta1/query").QueryBalanceRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryBalanceResponse>;
                        allBalances(request: import("../cosmos/bank/v1beta1/query").QueryAllBalancesRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryAllBalancesResponse>;
                        spendableBalances(request: import("../cosmos/bank/v1beta1/query").QuerySpendableBalancesRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySpendableBalancesResponse>;
                        totalSupply(request?: import("../cosmos/bank/v1beta1/query").QueryTotalSupplyRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryTotalSupplyResponse>;
                        supplyOf(request: import("../cosmos/bank/v1beta1/query").QuerySupplyOfRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySupplyOfResponse>;
                        params(request?: import("../cosmos/bank/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryParamsResponse>;
                        denomMetadata(request: import("../cosmos/bank/v1beta1/query").QueryDenomMetadataRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomMetadataResponse>;
                        denomsMetadata(request?: import("../cosmos/bank/v1beta1/query").QueryDenomsMetadataRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomsMetadataResponse>;
                        denomOwners(request: import("../cosmos/bank/v1beta1/query").QueryDenomOwnersRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomOwnersResponse>;
                    };
                };
                distribution: {
                    v1beta1: {
                        params(request?: import("../cosmos/distribution/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryParamsResponse>;
                        validatorOutstandingRewards(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsResponse>;
                        validatorCommission(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorCommissionRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorCommissionResponse>;
                        validatorSlashes(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorSlashesRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorSlashesResponse>;
                        delegationRewards(request: import("../cosmos/distribution/v1beta1/query").QueryDelegationRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegationRewardsResponse>;
                        delegationTotalRewards(request: import("../cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsResponse>;
                        delegatorValidators(request: import("../cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorWithdrawAddress(request: import("../cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressResponse>;
                        communityPool(request?: import("../cosmos/distribution/v1beta1/query").QueryCommunityPoolRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryCommunityPoolResponse>;
                    };
                };
                feegrant: {
                    v1beta1: {
                        allowance(request: import("../cosmos/feegrant/v1beta1/query").QueryAllowanceRequest): Promise<import("../cosmos/feegrant/v1beta1/query").QueryAllowanceResponse>;
                        allowances(request: import("../cosmos/feegrant/v1beta1/query").QueryAllowancesRequest): Promise<import("../cosmos/feegrant/v1beta1/query").QueryAllowancesResponse>;
                        allowancesByGranter(request: import("../cosmos/feegrant/v1beta1/query").QueryAllowancesByGranterRequest): Promise<import("../cosmos/feegrant/v1beta1/query").QueryAllowancesByGranterResponse>;
                    };
                };
                gov: {
                    v1: {
                        proposal(request: import("../cosmos/gov/v1/query").QueryProposalRequest): Promise<import("../cosmos/gov/v1/query").QueryProposalResponse>;
                        proposals(request: import("../cosmos/gov/v1/query").QueryProposalsRequest): Promise<import("../cosmos/gov/v1/query").QueryProposalsResponse>;
                        vote(request: import("../cosmos/gov/v1/query").QueryVoteRequest): Promise<import("../cosmos/gov/v1/query").QueryVoteResponse>;
                        votes(request: import("../cosmos/gov/v1/query").QueryVotesRequest): Promise<import("../cosmos/gov/v1/query").QueryVotesResponse>;
                        params(request: import("../cosmos/gov/v1/query").QueryParamsRequest): Promise<import("../cosmos/gov/v1/query").QueryParamsResponse>;
                        deposit(request: import("../cosmos/gov/v1/query").QueryDepositRequest): Promise<import("../cosmos/gov/v1/query").QueryDepositResponse>;
                        deposits(request: import("../cosmos/gov/v1/query").QueryDepositsRequest): Promise<import("../cosmos/gov/v1/query").QueryDepositsResponse>;
                        tallyResult(request: import("../cosmos/gov/v1/query").QueryTallyResultRequest): Promise<import("../cosmos/gov/v1/query").QueryTallyResultResponse>;
                    };
                    v1beta1: {
                        proposal(request: import("../cosmos/gov/v1beta1/query").QueryProposalRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryProposalResponse>;
                        proposals(request: import("../cosmos/gov/v1beta1/query").QueryProposalsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryProposalsResponse>;
                        vote(request: import("../cosmos/gov/v1beta1/query").QueryVoteRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryVoteResponse>;
                        votes(request: import("../cosmos/gov/v1beta1/query").QueryVotesRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryVotesResponse>;
                        params(request: import("../cosmos/gov/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryParamsResponse>;
                        deposit(request: import("../cosmos/gov/v1beta1/query").QueryDepositRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryDepositResponse>;
                        deposits(request: import("../cosmos/gov/v1beta1/query").QueryDepositsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryDepositsResponse>;
                        tallyResult(request: import("../cosmos/gov/v1beta1/query").QueryTallyResultRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryTallyResultResponse>;
                    };
                };
                group: {
                    v1: {
                        groupInfo(request: import("../cosmos/group/v1/query").QueryGroupInfoRequest): Promise<import("../cosmos/group/v1/query").QueryGroupInfoResponse>;
                        groupPolicyInfo(request: import("../cosmos/group/v1/query").QueryGroupPolicyInfoRequest): Promise<import("../cosmos/group/v1/query").QueryGroupPolicyInfoResponse>;
                        groupMembers(request: import("../cosmos/group/v1/query").QueryGroupMembersRequest): Promise<import("../cosmos/group/v1/query").QueryGroupMembersResponse>;
                        groupsByAdmin(request: import("../cosmos/group/v1/query").QueryGroupsByAdminRequest): Promise<import("../cosmos/group/v1/query").QueryGroupsByAdminResponse>;
                        groupPoliciesByGroup(request: import("../cosmos/group/v1/query").QueryGroupPoliciesByGroupRequest): Promise<import("../cosmos/group/v1/query").QueryGroupPoliciesByGroupResponse>;
                        groupPoliciesByAdmin(request: import("../cosmos/group/v1/query").QueryGroupPoliciesByAdminRequest): Promise<import("../cosmos/group/v1/query").QueryGroupPoliciesByAdminResponse>;
                        proposal(request: import("../cosmos/group/v1/query").QueryProposalRequest): Promise<import("../cosmos/group/v1/query").QueryProposalResponse>;
                        proposalsByGroupPolicy(request: import("../cosmos/group/v1/query").QueryProposalsByGroupPolicyRequest): Promise<import("../cosmos/group/v1/query").QueryProposalsByGroupPolicyResponse>;
                        voteByProposalVoter(request: import("../cosmos/group/v1/query").QueryVoteByProposalVoterRequest): Promise<import("../cosmos/group/v1/query").QueryVoteByProposalVoterResponse>;
                        votesByProposal(request: import("../cosmos/group/v1/query").QueryVotesByProposalRequest): Promise<import("../cosmos/group/v1/query").QueryVotesByProposalResponse>;
                        votesByVoter(request: import("../cosmos/group/v1/query").QueryVotesByVoterRequest): Promise<import("../cosmos/group/v1/query").QueryVotesByVoterResponse>;
                        groupsByMember(request: import("../cosmos/group/v1/query").QueryGroupsByMemberRequest): Promise<import("../cosmos/group/v1/query").QueryGroupsByMemberResponse>;
                        tallyResult(request: import("../cosmos/group/v1/query").QueryTallyResultRequest): Promise<import("../cosmos/group/v1/query").QueryTallyResultResponse>;
                    };
                };
                mint: {
                    v1beta1: {
                        params(request?: import("../cosmos/mint/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/mint/v1beta1/query").QueryParamsResponse>;
                        inflation(request?: import("../cosmos/mint/v1beta1/query").QueryInflationRequest): Promise<import("../cosmos/mint/v1beta1/query").QueryInflationResponse>;
                        annualProvisions(request?: import("../cosmos/mint/v1beta1/query").QueryAnnualProvisionsRequest): Promise<import("../cosmos/mint/v1beta1/query").QueryAnnualProvisionsResponse>;
                    };
                };
                params: {
                    v1beta1: {
                        params(request: import("../cosmos/params/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/params/v1beta1/query").QueryParamsResponse>;
                        subspaces(request?: import("../cosmos/params/v1beta1/query").QuerySubspacesRequest): Promise<import("../cosmos/params/v1beta1/query").QuerySubspacesResponse>;
                    };
                };
                staking: {
                    v1beta1: {
                        validators(request: import("../cosmos/staking/v1beta1/query").QueryValidatorsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorsResponse>;
                        validator(request: import("../cosmos/staking/v1beta1/query").QueryValidatorRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorResponse>;
                        validatorDelegations(request: import("../cosmos/staking/v1beta1/query").QueryValidatorDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorDelegationsResponse>;
                        validatorUnbondingDelegations(request: import("../cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsResponse>;
                        delegation(request: import("../cosmos/staking/v1beta1/query").QueryDelegationRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegationResponse>;
                        unbondingDelegation(request: import("../cosmos/staking/v1beta1/query").QueryUnbondingDelegationRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryUnbondingDelegationResponse>;
                        delegatorDelegations(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorDelegationsResponse>;
                        delegatorUnbondingDelegations(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsResponse>;
                        redelegations(request: import("../cosmos/staking/v1beta1/query").QueryRedelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryRedelegationsResponse>;
                        delegatorValidators(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorValidator(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorResponse>;
                        historicalInfo(request: import("../cosmos/staking/v1beta1/query").QueryHistoricalInfoRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryHistoricalInfoResponse>;
                        pool(request?: import("../cosmos/staking/v1beta1/query").QueryPoolRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryPoolResponse>;
                        params(request?: import("../cosmos/staking/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryParamsResponse>;
                    };
                };
                tx: {
                    v1beta1: {
                        simulate(request: import("../cosmos/tx/v1beta1/service").SimulateRequest): Promise<import("../cosmos/tx/v1beta1/service").SimulateResponse>;
                        getTx(request: import("../cosmos/tx/v1beta1/service").GetTxRequest): Promise<import("../cosmos/tx/v1beta1/service").GetTxResponse>;
                        broadcastTx(request: import("../cosmos/tx/v1beta1/service").BroadcastTxRequest): Promise<import("../cosmos/tx/v1beta1/service").BroadcastTxResponse>;
                        getTxsEvent(request: import("../cosmos/tx/v1beta1/service").GetTxsEventRequest): Promise<import("../cosmos/tx/v1beta1/service").GetTxsEventResponse>;
                        getBlockWithTxs(request: import("../cosmos/tx/v1beta1/service").GetBlockWithTxsRequest): Promise<import("../cosmos/tx/v1beta1/service").GetBlockWithTxsResponse>;
                    };
                };
                upgrade: {
                    v1beta1: {
                        currentPlan(request?: import("../cosmos/upgrade/v1beta1/query").QueryCurrentPlanRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryCurrentPlanResponse>;
                        appliedPlan(request: import("../cosmos/upgrade/v1beta1/query").QueryAppliedPlanRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryAppliedPlanResponse>;
                        upgradedConsensusState(request: import("../cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateResponse>;
                        moduleVersions(request: import("../cosmos/upgrade/v1beta1/query").QueryModuleVersionsRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryModuleVersionsResponse>;
                        authority(request?: import("../cosmos/upgrade/v1beta1/query").QueryAuthorityRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryAuthorityResponse>;
                    };
                };
            };
            cosmwasm: {
                wasm: {
                    v1: {
                        contractInfo(request: _69.QueryContractInfoRequest): Promise<_69.QueryContractInfoResponse>;
                        contractHistory(request: _69.QueryContractHistoryRequest): Promise<_69.QueryContractHistoryResponse>;
                        contractsByCode(request: _69.QueryContractsByCodeRequest): Promise<_69.QueryContractsByCodeResponse>;
                        allContractState(request: _69.QueryAllContractStateRequest): Promise<_69.QueryAllContractStateResponse>;
                        rawContractState(request: _69.QueryRawContractStateRequest): Promise<_69.QueryRawContractStateResponse>;
                        smartContractState(request: _69.QuerySmartContractStateRequest): Promise<_69.QuerySmartContractStateResponse>;
                        code(request: _69.QueryCodeRequest): Promise<_69.QueryCodeResponse>;
                        codes(request?: _69.QueryCodesRequest): Promise<_69.QueryCodesResponse>;
                        pinnedCodes(request?: _69.QueryPinnedCodesRequest): Promise<_69.QueryPinnedCodesResponse>;
                        params(request?: _69.QueryParamsRequest): Promise<_69.QueryParamsResponse>;
                        contractsByCreator(request: _69.QueryContractsByCreatorRequest): Promise<_69.QueryContractsByCreatorResponse>;
                    };
                };
            };
        }>;
        createLCDClient: ({ restEndpoint }: {
            restEndpoint: string;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: import("../cosmos/auth/v1beta1/query.lcd").LCDQueryClient;
                };
                authz: {
                    v1beta1: import("../cosmos/authz/v1beta1/query.lcd").LCDQueryClient;
                };
                bank: {
                    v1beta1: import("../cosmos/bank/v1beta1/query.lcd").LCDQueryClient;
                };
                distribution: {
                    v1beta1: import("../cosmos/distribution/v1beta1/query.lcd").LCDQueryClient;
                };
                feegrant: {
                    v1beta1: import("../cosmos/feegrant/v1beta1/query.lcd").LCDQueryClient;
                };
                gov: {
                    v1: import("../cosmos/gov/v1/query.lcd").LCDQueryClient;
                    v1beta1: import("../cosmos/gov/v1beta1/query.lcd").LCDQueryClient;
                };
                group: {
                    v1: import("../cosmos/group/v1/query.lcd").LCDQueryClient;
                };
                mint: {
                    v1beta1: import("../cosmos/mint/v1beta1/query.lcd").LCDQueryClient;
                };
                params: {
                    v1beta1: import("../cosmos/params/v1beta1/query.lcd").LCDQueryClient;
                };
                staking: {
                    v1beta1: import("../cosmos/staking/v1beta1/query.lcd").LCDQueryClient;
                };
                tx: {
                    v1beta1: import("../cosmos/tx/v1beta1/service.lcd").LCDQueryClient;
                };
                upgrade: {
                    v1beta1: import("../cosmos/upgrade/v1beta1/query.lcd").LCDQueryClient;
                };
            };
            cosmwasm: {
                wasm: {
                    v1: _173.LCDQueryClient;
                };
            };
        }>;
    };
}
